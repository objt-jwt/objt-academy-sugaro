IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_TOOLS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_TOOLS
GO

CREATE TABLE DCEREPORT_TOOLS
(
  OID                  BIGINT NOT NULL,
  UOM_OID              BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  UOM                  VARCHAR(32),
  ID                   VARCHAR(32),
  CATEGORY             VARCHAR(64),
  DTSVALIDFROM         DATETIME2,
  DTSVALIDUNTIL        DATETIME2,
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_TOOLS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_TOOLS_UOM_OID ON DCEREPORT_TOOLS(UOM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_EQUIPMENTMODULES') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_EQUIPMENTMODULES
GO

CREATE TABLE DCEREPORT_EQUIPMENTMODULES
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  CATEGORY             VARCHAR(64),
  PROCESSRESOURCE_OID  BIGINT,
  DTSVALIDFROM         DATETIME2,
  DTSVALIDUNTIL        DATETIME2,
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_EQUIPMENTMODULES
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_EQUIPMENTMODULES_PROCESSRESOURCE_OID ON DCEREPORT_EQUIPMENTMODULES(PROCESSRESOURCE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_RESOURCETRAINS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_RESOURCETRAINS
GO

CREATE TABLE DCEREPORT_RESOURCETRAINS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  DTSVALIDFROM         DATETIME2,
  DTSVALIDUNTIL        DATETIME2,
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_RESOURCETRAINS
  PRIMARY KEY (OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_RESOURCETRAIN_RESRCS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_RESOURCETRAIN_RESRCS
GO

CREATE TABLE DCEREPORT_RESOURCETRAIN_RESRCS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  PROCESSRESOURCE_OID  BIGINT NOT NULL,
  PROCESSRESOURCE_NAME VARCHAR(64),
  PROCESSRESOURCE_DESCRIPTION VARCHAR(255),
  PROCESSRESOURCE_TYPE VARCHAR(10),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_RESOURCETRAIN_RESRCS
  PRIMARY KEY (OID, PROCESSRESOURCE_OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DEPARTMENT_CHILDDEP') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DEPARTMENT_CHILDDEP
GO

CREATE TABLE DCEREPORT_DEPARTMENT_CHILDDEP
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  CHILDDEPARTMENT_OID  BIGINT NOT NULL,
  CHILDDEPARTMENT_NAME VARCHAR(64),
  CHILDDEPARTMENT_DESCRIPTION VARCHAR(255),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DEPARTMENT_CHILDDEP
  PRIMARY KEY (OID, CHILDDEPARTMENT_OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DEPARTMENT_RESRCS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DEPARTMENT_RESRCS
GO

CREATE TABLE DCEREPORT_DEPARTMENT_RESRCS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  PROCESSRESOURCE_OID  BIGINT NOT NULL,
  PROCESSRESOURCE_NAME VARCHAR(64),
  PROCESSRESOURCE_DESCRIPTION VARCHAR(255),
  PROCESSRESOURCE_TYPE VARCHAR(10),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DEPARTMENT_RESRCS
  PRIMARY KEY (OID, PROCESSRESOURCE_OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_PRODUCTIONOPERATIONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_PRODUCTIONOPERATIONS
GO

CREATE TABLE DCEREPORT_PRODUCTIONOPERATIONS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  PRODUCTIONORDER_OID  BIGINT,
  DTSPLANNEDSTART      DATETIME2,
  DTSPLANNEDSTOP       DATETIME2,
  DTSSCHEDULEDSTART    DATETIME2,
  DTSSCHEDULEDSTOP     DATETIME2,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  PROCESSRESOURCE_OID  BIGINT,
  ITEM_OID             BIGINT,
  QTYPLANNED           FLOAT,
  QTYFACTOR            FLOAT,
  QTYUNIT              FLOAT,
  QTY                  FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREWORKED          FLOAT,
  QTYREWORKABLE        FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRDTS6              DATETIME2,
  USRDTS7              DATETIME2,
  USRDTS8              DATETIME2,
  USRDTS9              DATETIME2,
  USRDTS10             DATETIME2,
  USRDTS11             DATETIME2,
  USRDTS12             DATETIME2,
  USRDTS13             DATETIME2,
  USRDTS14             DATETIME2,
  USRDTS15             DATETIME2,
  USRDTS16             DATETIME2,
  USRDTS17             DATETIME2,
  USRDTS18             DATETIME2,
  USRDTS19             DATETIME2,
  USRDTS20             DATETIME2,
  USRDTS21             DATETIME2,
  USRDTS22             DATETIME2,
  USRDTS23             DATETIME2,
  USRDTS24             DATETIME2,
  USRDTS25             DATETIME2,
  USRDTS26             DATETIME2,
  USRDTS27             DATETIME2,
  USRDTS28             DATETIME2,
  USRDTS29             DATETIME2,
  USRDTS30             DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRFLG6              CHAR(1),
  USRFLG7              CHAR(1),
  USRFLG8              CHAR(1),
  USRFLG9              CHAR(1),
  USRFLG10             CHAR(1),
  USRFLG11             CHAR(1),
  USRFLG12             CHAR(1),
  USRFLG13             CHAR(1),
  USRFLG14             CHAR(1),
  USRFLG15             CHAR(1),
  USRFLG16             CHAR(1),
  USRFLG17             CHAR(1),
  USRFLG18             CHAR(1),
  USRFLG19             CHAR(1),
  USRFLG20             CHAR(1),
  USRFLG21             CHAR(1),
  USRFLG22             CHAR(1),
  USRFLG23             CHAR(1),
  USRFLG24             CHAR(1),
  USRFLG25             CHAR(1),
  USRFLG26             CHAR(1),
  USRFLG27             CHAR(1),
  USRFLG28             CHAR(1),
  USRFLG29             CHAR(1),
  USRFLG30             CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRNUM6              FLOAT,
  USRNUM7              FLOAT,
  USRNUM8              FLOAT,
  USRNUM9              FLOAT,
  USRNUM10             FLOAT,
  USRNUM11             FLOAT,
  USRNUM12             FLOAT,
  USRNUM13             FLOAT,
  USRNUM14             FLOAT,
  USRNUM15             FLOAT,
  USRNUM16             FLOAT,
  USRNUM17             FLOAT,
  USRNUM18             FLOAT,
  USRNUM19             FLOAT,
  USRNUM20             FLOAT,
  USRNUM21             FLOAT,
  USRNUM22             FLOAT,
  USRNUM23             FLOAT,
  USRNUM24             FLOAT,
  USRNUM25             FLOAT,
  USRNUM26             FLOAT,
  USRNUM27             FLOAT,
  USRNUM28             FLOAT,
  USRNUM29             FLOAT,
  USRNUM30             FLOAT,
  USRNUM31             FLOAT,
  USRNUM32             FLOAT,
  USRNUM33             FLOAT,
  USRNUM34             FLOAT,
  USRNUM35             FLOAT,
  USRNUM36             FLOAT,
  USRNUM37             FLOAT,
  USRNUM38             FLOAT,
  USRNUM39             FLOAT,
  USRNUM40             FLOAT,
  USRNUM41             FLOAT,
  USRNUM42             FLOAT,
  USRNUM43             FLOAT,
  USRNUM44             FLOAT,
  USRNUM45             FLOAT,
  USRNUM46             FLOAT,
  USRNUM47             FLOAT,
  USRNUM48             FLOAT,
  USRNUM49             FLOAT,
  USRNUM50             FLOAT,
  USRNUM51             FLOAT,
  USRNUM52             FLOAT,
  USRNUM53             FLOAT,
  USRNUM54             FLOAT,
  USRNUM55             FLOAT,
  USRNUM56             FLOAT,
  USRNUM57             FLOAT,
  USRNUM58             FLOAT,
  USRNUM59             FLOAT,
  USRNUM60             FLOAT,
  USRNUM61             FLOAT,
  USRNUM62             FLOAT,
  USRNUM63             FLOAT,
  USRNUM64             FLOAT,
  USRNUM65             FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  USRTXT6              VARCHAR(255),
  USRTXT7              VARCHAR(255),
  USRTXT8              VARCHAR(255),
  USRTXT9              VARCHAR(255),
  USRTXT10             VARCHAR(255),
  USRTXT11             VARCHAR(255),
  USRTXT12             VARCHAR(255),
  USRTXT13             VARCHAR(255),
  USRTXT14             VARCHAR(255),
  USRTXT15             VARCHAR(255),
  USRTXT16             VARCHAR(255),
  USRTXT17             VARCHAR(255),
  USRTXT18             VARCHAR(255),
  USRTXT19             VARCHAR(255),
  USRTXT20             VARCHAR(255),
  USRTXT21             VARCHAR(255),
  USRTXT22             VARCHAR(255),
  USRTXT23             VARCHAR(255),
  USRTXT24             VARCHAR(255),
  USRTXT25             VARCHAR(255),
  USRTXT26             VARCHAR(255),
  USRTXT27             VARCHAR(255),
  USRTXT28             VARCHAR(255),
  USRTXT29             VARCHAR(255),
  USRTXT30             VARCHAR(255),
  USRTXT31             VARCHAR(255),
  USRTXT32             VARCHAR(255),
  USRTXT33             VARCHAR(255),
  USRTXT34             VARCHAR(255),
  USRTXT35             VARCHAR(255),
  USRTXT36             VARCHAR(255),
  USRTXT37             VARCHAR(255),
  USRTXT38             VARCHAR(255),
  USRTXT39             VARCHAR(255),
  USRTXT40             VARCHAR(255),
  USRTXT41             VARCHAR(255),
  USRTXT42             VARCHAR(255),
  USRTXT43             VARCHAR(255),
  USRTXT44             VARCHAR(255),
  USRTXT45             VARCHAR(255),
  USRTXT46             VARCHAR(255),
  USRTXT47             VARCHAR(255),
  USRTXT48             VARCHAR(255),
  USRTXT49             VARCHAR(255),
  USRTXT50             VARCHAR(255),
  USRTXT51             VARCHAR(255),
  USRTXT52             VARCHAR(255),
  USRTXT53             VARCHAR(255),
  USRTXT54             VARCHAR(255),
  USRTXT55             VARCHAR(255),
  USRTXT56             VARCHAR(255),
  USRTXT57             VARCHAR(255),
  USRTXT58             VARCHAR(255),
  USRTXT59             VARCHAR(255),
  USRTXT60             VARCHAR(255),
  USRTXT61             VARCHAR(255),
  USRTXT62             VARCHAR(255),
  USRTXT63             VARCHAR(255),
  USRTXT64             VARCHAR(255),
  USRTXT65             VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_PRODUCTIONOPERATIONS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONOPERATIONS_PRODUCTIONORDER_OID ON DCEREPORT_PRODUCTIONOPERATIONS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONOPERATIONS_PROCESSRESOURCE_OID ON DCEREPORT_PRODUCTIONOPERATIONS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONOPERATIONS_ITEM_OID ON DCEREPORT_PRODUCTIONOPERATIONS(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_PRODUCTIONOP_QTIES') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_PRODUCTIONOP_QTIES
GO

CREATE TABLE DCEREPORT_PRODUCTIONOP_QTIES
(
  OID                  BIGINT NOT NULL,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  ITEM_OID             BIGINT,
  TYPE                 VARCHAR(22),
  QTYPLANNED           FLOAT,
  QTYFACTOR            FLOAT,
  QTYUNIT              FLOAT,
  QTY                  FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREWORKED          FLOAT,
  QTYREWORKABLE        FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_PRODUCTIONOP_QTIES
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONOP_QTIES_PRODUCTIONOPERATION_OID ON DCEREPORT_PRODUCTIONOP_QTIES(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONOP_QTIES_PRODUCTIONORDER_OID ON DCEREPORT_PRODUCTIONOP_QTIES(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONOP_QTIES_ITEM_OID ON DCEREPORT_PRODUCTIONOP_QTIES(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_PRODUCTIONORDERS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_PRODUCTIONORDERS
GO

CREATE TABLE DCEREPORT_PRODUCTIONORDERS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  ID                   VARCHAR(32),
  DESCRIPTION          VARCHAR(255),
  DTSPLANNEDSTART      DATETIME2,
  DTSPLANNEDSTOP       DATETIME2,
  DTSSCHEDULEDSTART    DATETIME2,
  DTSSCHEDULEDSTOP     DATETIME2,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  DTSDUEBEFORE         DATETIME2,
  ITEM_OID             BIGINT,
  CUSTOMER_OID         BIGINT,
  RECIPE_OID           BIGINT,
  RECIPE_NAME          VARCHAR(64),
  RECIPE_VARIANT       VARCHAR(64),
  RECIPE_VERSION       BIGINT,
  QTYPLANNED           FLOAT,
  QTYYIELD             FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRDTS6              DATETIME2,
  USRDTS7              DATETIME2,
  USRDTS8              DATETIME2,
  USRDTS9              DATETIME2,
  USRDTS10             DATETIME2,
  USRDTS11             DATETIME2,
  USRDTS12             DATETIME2,
  USRDTS13             DATETIME2,
  USRDTS14             DATETIME2,
  USRDTS15             DATETIME2,
  USRDTS16             DATETIME2,
  USRDTS17             DATETIME2,
  USRDTS18             DATETIME2,
  USRDTS19             DATETIME2,
  USRDTS20             DATETIME2,
  USRDTS21             DATETIME2,
  USRDTS22             DATETIME2,
  USRDTS23             DATETIME2,
  USRDTS24             DATETIME2,
  USRDTS25             DATETIME2,
  USRDTS26             DATETIME2,
  USRDTS27             DATETIME2,
  USRDTS28             DATETIME2,
  USRDTS29             DATETIME2,
  USRDTS30             DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRFLG6              CHAR(1),
  USRFLG7              CHAR(1),
  USRFLG8              CHAR(1),
  USRFLG9              CHAR(1),
  USRFLG10             CHAR(1),
  USRFLG11             CHAR(1),
  USRFLG12             CHAR(1),
  USRFLG13             CHAR(1),
  USRFLG14             CHAR(1),
  USRFLG15             CHAR(1),
  USRFLG16             CHAR(1),
  USRFLG17             CHAR(1),
  USRFLG18             CHAR(1),
  USRFLG19             CHAR(1),
  USRFLG20             CHAR(1),
  USRFLG21             CHAR(1),
  USRFLG22             CHAR(1),
  USRFLG23             CHAR(1),
  USRFLG24             CHAR(1),
  USRFLG25             CHAR(1),
  USRFLG26             CHAR(1),
  USRFLG27             CHAR(1),
  USRFLG28             CHAR(1),
  USRFLG29             CHAR(1),
  USRFLG30             CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRNUM6              FLOAT,
  USRNUM7              FLOAT,
  USRNUM8              FLOAT,
  USRNUM9              FLOAT,
  USRNUM10             FLOAT,
  USRNUM11             FLOAT,
  USRNUM12             FLOAT,
  USRNUM13             FLOAT,
  USRNUM14             FLOAT,
  USRNUM15             FLOAT,
  USRNUM16             FLOAT,
  USRNUM17             FLOAT,
  USRNUM18             FLOAT,
  USRNUM19             FLOAT,
  USRNUM20             FLOAT,
  USRNUM21             FLOAT,
  USRNUM22             FLOAT,
  USRNUM23             FLOAT,
  USRNUM24             FLOAT,
  USRNUM25             FLOAT,
  USRNUM26             FLOAT,
  USRNUM27             FLOAT,
  USRNUM28             FLOAT,
  USRNUM29             FLOAT,
  USRNUM30             FLOAT,
  USRNUM31             FLOAT,
  USRNUM32             FLOAT,
  USRNUM33             FLOAT,
  USRNUM34             FLOAT,
  USRNUM35             FLOAT,
  USRNUM36             FLOAT,
  USRNUM37             FLOAT,
  USRNUM38             FLOAT,
  USRNUM39             FLOAT,
  USRNUM40             FLOAT,
  USRNUM41             FLOAT,
  USRNUM42             FLOAT,
  USRNUM43             FLOAT,
  USRNUM44             FLOAT,
  USRNUM45             FLOAT,
  USRNUM46             FLOAT,
  USRNUM47             FLOAT,
  USRNUM48             FLOAT,
  USRNUM49             FLOAT,
  USRNUM50             FLOAT,
  USRNUM51             FLOAT,
  USRNUM52             FLOAT,
  USRNUM53             FLOAT,
  USRNUM54             FLOAT,
  USRNUM55             FLOAT,
  USRNUM56             FLOAT,
  USRNUM57             FLOAT,
  USRNUM58             FLOAT,
  USRNUM59             FLOAT,
  USRNUM60             FLOAT,
  USRNUM61             FLOAT,
  USRNUM62             FLOAT,
  USRNUM63             FLOAT,
  USRNUM64             FLOAT,
  USRNUM65             FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  USRTXT6              VARCHAR(255),
  USRTXT7              VARCHAR(255),
  USRTXT8              VARCHAR(255),
  USRTXT9              VARCHAR(255),
  USRTXT10             VARCHAR(255),
  USRTXT11             VARCHAR(255),
  USRTXT12             VARCHAR(255),
  USRTXT13             VARCHAR(255),
  USRTXT14             VARCHAR(255),
  USRTXT15             VARCHAR(255),
  USRTXT16             VARCHAR(255),
  USRTXT17             VARCHAR(255),
  USRTXT18             VARCHAR(255),
  USRTXT19             VARCHAR(255),
  USRTXT20             VARCHAR(255),
  USRTXT21             VARCHAR(255),
  USRTXT22             VARCHAR(255),
  USRTXT23             VARCHAR(255),
  USRTXT24             VARCHAR(255),
  USRTXT25             VARCHAR(255),
  USRTXT26             VARCHAR(255),
  USRTXT27             VARCHAR(255),
  USRTXT28             VARCHAR(255),
  USRTXT29             VARCHAR(255),
  USRTXT30             VARCHAR(255),
  USRTXT31             VARCHAR(255),
  USRTXT32             VARCHAR(255),
  USRTXT33             VARCHAR(255),
  USRTXT34             VARCHAR(255),
  USRTXT35             VARCHAR(255),
  USRTXT36             VARCHAR(255),
  USRTXT37             VARCHAR(255),
  USRTXT38             VARCHAR(255),
  USRTXT39             VARCHAR(255),
  USRTXT40             VARCHAR(255),
  USRTXT41             VARCHAR(255),
  USRTXT42             VARCHAR(255),
  USRTXT43             VARCHAR(255),
  USRTXT44             VARCHAR(255),
  USRTXT45             VARCHAR(255),
  USRTXT46             VARCHAR(255),
  USRTXT47             VARCHAR(255),
  USRTXT48             VARCHAR(255),
  USRTXT49             VARCHAR(255),
  USRTXT50             VARCHAR(255),
  USRTXT51             VARCHAR(255),
  USRTXT52             VARCHAR(255),
  USRTXT53             VARCHAR(255),
  USRTXT54             VARCHAR(255),
  USRTXT55             VARCHAR(255),
  USRTXT56             VARCHAR(255),
  USRTXT57             VARCHAR(255),
  USRTXT58             VARCHAR(255),
  USRTXT59             VARCHAR(255),
  USRTXT60             VARCHAR(255),
  USRTXT61             VARCHAR(255),
  USRTXT62             VARCHAR(255),
  USRTXT63             VARCHAR(255),
  USRTXT64             VARCHAR(255),
  USRTXT65             VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_PRODUCTIONORDERS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONORDERS_ITEM_OID ON DCEREPORT_PRODUCTIONORDERS(ITEM_OID)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONORDERS_CUSTOMER_OID ON DCEREPORT_PRODUCTIONORDERS(CUSTOMER_OID)
GO

CREATE INDEX IDCEREPORT_PRODUCTIONORDERS_RECIPE_OID ON DCEREPORT_PRODUCTIONORDERS(RECIPE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MACHINEOPERATIONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MACHINEOPERATIONS
GO

CREATE TABLE DCEREPORT_MACHINEOPERATIONS
(
  OID                  BIGINT NOT NULL,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  DTSPLANNEDSTART      DATETIME2,
  DTSPLANNEDSTOP       DATETIME2,
  DTSSCHEDULEDSTART    DATETIME2,
  DTSSCHEDULEDSTOP     DATETIME2,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  INSTRUCTIONSTATUS    INT,
  PROCESSRESOURCE_OID  BIGINT,
  ITEM_OID             BIGINT,
  QTYPLANNED           FLOAT,
  QTYFACTOR            FLOAT,
  QTYUNIT              FLOAT,
  QTY                  FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREWORKED          FLOAT,
  QTYREWORKABLE        FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MACHINEOPERATIONS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_MACHINEOPERATIONS_PRODUCTIONOPERATION_OID ON DCEREPORT_MACHINEOPERATIONS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOPERATIONS_PRODUCTIONORDER_OID ON DCEREPORT_MACHINEOPERATIONS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOPERATIONS_PROCESSRESOURCE_OID ON DCEREPORT_MACHINEOPERATIONS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOPERATIONS_ITEM_OID ON DCEREPORT_MACHINEOPERATIONS(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MACHINEOP_SEGMENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MACHINEOP_SEGMENTS
GO

CREATE TABLE DCEREPORT_MACHINEOP_SEGMENTS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  DTSPLANNEDSTART      DATETIME2,
  DTSPLANNEDSTOP       DATETIME2,
  TARGETDURATION       FLOAT,
  EFFICIENCY           FLOAT,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MACHINEOP_SEGMENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_SEGMENTS_PROCESSRESOURCE_OID ON DCEREPORT_MACHINEOP_SEGMENTS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_SEGMENTS_MACHINEOPERATION_OID ON DCEREPORT_MACHINEOP_SEGMENTS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_SEGMENTS_PRODUCTIONOPERATION_OID ON DCEREPORT_MACHINEOP_SEGMENTS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_SEGMENTS_PRODUCTIONORDER_OID ON DCEREPORT_MACHINEOP_SEGMENTS(PRODUCTIONORDER_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MACHINEOP_QTIES') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MACHINEOP_QTIES
GO

CREATE TABLE DCEREPORT_MACHINEOP_QTIES
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  PRODUCTIONORDER_ID   VARCHAR(32),
  SHIFT_OID            BIGINT,
  ITEM_OID             BIGINT,
  TYPE                 VARCHAR(23),
  QTYPLANNED           FLOAT,
  QTYFACTOR            FLOAT,
  QTYUNIT              FLOAT,
  QTY                  FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTY_SETUP            FLOAT,
  QTY_LOAD             FLOAT,
  QTY_RUN              FLOAT,
  QTY_UNLOAD           FLOAT,
  QTY_RESET            FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREJECTED_SETUP    FLOAT,
  QTYREJECTED_LOAD     FLOAT,
  QTYREJECTED_RUN      FLOAT,
  QTYREJECTED_UNLOAD   FLOAT,
  QTYREJECTED_RESET    FLOAT,
  QTYREWORKED          FLOAT,
  QTYREWORKABLE        FLOAT,
  UOM                  VARCHAR(32),
  WIP_TYPE             VARCHAR(10),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MACHINEOP_QTIES
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_QTIES_PROCESSRESOURCE_OID ON DCEREPORT_MACHINEOP_QTIES(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_QTIES_MACHINEOPERATION_OID ON DCEREPORT_MACHINEOP_QTIES(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_QTIES_PRODUCTIONOPERATION_OID ON DCEREPORT_MACHINEOP_QTIES(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_QTIES_PRODUCTIONORDER_OID ON DCEREPORT_MACHINEOP_QTIES(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_QTIES_SHIFT_OID ON DCEREPORT_MACHINEOP_QTIES(SHIFT_OID)
GO

CREATE INDEX IDCEREPORT_MACHINEOP_QTIES_ITEM_OID ON DCEREPORT_MACHINEOP_QTIES(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_SHIFTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_SHIFTS
GO

CREATE TABLE DCEREPORT_SHIFTS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(32),
  DESCRIPTION          VARCHAR(64),
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  ISPRODUCTIVE         CHAR(1),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_SHIFTS
  PRIMARY KEY (OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DIRECT_TASKS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DIRECT_TASKS
GO

CREATE TABLE DCEREPORT_DIRECT_TASKS
(
  OID                  BIGINT NOT NULL,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  ALLOCATION           FLOAT,
  FTE                  FLOAT,
  PRODUCTIONORDER_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PROCESSRESOURCE_OID  BIGINT,
  ACTIVITY_OID         BIGINT,
  EMPLOYEE_OID         BIGINT,
  ITEM_OID             BIGINT,
  QTY                  FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREWORKED          FLOAT,
  QTYREWORKABLE        FLOAT,
  QTYDIRECTREWORK      FLOAT,
  QTYINDIRECTREWORK    FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DIRECT_TASKS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASKS_PRODUCTIONORDER_OID ON DCEREPORT_DIRECT_TASKS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASKS_MACHINEOPERATION_OID ON DCEREPORT_DIRECT_TASKS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASKS_PRODUCTIONOPERATION_OID ON DCEREPORT_DIRECT_TASKS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASKS_PROCESSRESOURCE_OID ON DCEREPORT_DIRECT_TASKS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASKS_ACTIVITY_OID ON DCEREPORT_DIRECT_TASKS(ACTIVITY_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASKS_EMPLOYEE_OID ON DCEREPORT_DIRECT_TASKS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASKS_ITEM_OID ON DCEREPORT_DIRECT_TASKS(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DIRECT_TASK_SEGMENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DIRECT_TASK_SEGMENTS
GO

CREATE TABLE DCEREPORT_DIRECT_TASK_SEGMENTS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  WORKCENTER_OID       BIGINT,
  DIRECT_TASK_OID      BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  ITEM_OID             BIGINT,
  QTY                  FLOAT,
  QTYREJECTED          FLOAT,
  QTYREWORKED          FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DIRECT_TASK_SEGMENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_SEGMENTS_WORKCENTER_OID ON DCEREPORT_DIRECT_TASK_SEGMENTS(WORKCENTER_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_SEGMENTS_DIRECT_TASK_OID ON DCEREPORT_DIRECT_TASK_SEGMENTS(DIRECT_TASK_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_SEGMENTS_MACHINEOPERATION_OID ON DCEREPORT_DIRECT_TASK_SEGMENTS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_SEGMENTS_PRODUCTIONOPERATION_OID ON DCEREPORT_DIRECT_TASK_SEGMENTS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_SEGMENTS_PRODUCTIONORDER_OID ON DCEREPORT_DIRECT_TASK_SEGMENTS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_SEGMENTS_ITEM_OID ON DCEREPORT_DIRECT_TASK_SEGMENTS(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DIRECT_TASK_QTIES') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DIRECT_TASK_QTIES
GO

CREATE TABLE DCEREPORT_DIRECT_TASK_QTIES
(
  OID                  BIGINT NOT NULL,
  DIRECT_TASK_OID      BIGINT,
  WORKCENTER_OID       BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  SHIFT_OID            BIGINT,
  ITEM_OID             BIGINT,
  TYPE                 VARCHAR(22),
  QTYPLANNED           FLOAT,
  QTYFACTOR            FLOAT,
  QTYUNIT              FLOAT,
  QTY                  FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTY_SETUP            FLOAT,
  QTY_LOAD             FLOAT,
  QTY_RUN              FLOAT,
  QTY_UNLOAD           FLOAT,
  QTY_RESET            FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREJECTED_SETUP    FLOAT,
  QTYREJECTED_LOAD     FLOAT,
  QTYREJECTED_RUN      FLOAT,
  QTYREJECTED_UNLOAD   FLOAT,
  QTYREJECTED_RESET    FLOAT,
  QTYREWORKED          FLOAT,
  QTYREWORKABLE        FLOAT,
  QTYDIRECTREWORK      FLOAT,
  QTYINDIRECTREWORK    FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DIRECT_TASK_QTIES
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_QTIES_DIRECT_TASK_OID ON DCEREPORT_DIRECT_TASK_QTIES(DIRECT_TASK_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_QTIES_WORKCENTER_OID ON DCEREPORT_DIRECT_TASK_QTIES(WORKCENTER_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_QTIES_MACHINEOPERATION_OID ON DCEREPORT_DIRECT_TASK_QTIES(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_QTIES_PRODUCTIONOPERATION_OID ON DCEREPORT_DIRECT_TASK_QTIES(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_QTIES_PRODUCTIONORDER_OID ON DCEREPORT_DIRECT_TASK_QTIES(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_QTIES_SHIFT_OID ON DCEREPORT_DIRECT_TASK_QTIES(SHIFT_OID)
GO

CREATE INDEX IDCEREPORT_DIRECT_TASK_QTIES_ITEM_OID ON DCEREPORT_DIRECT_TASK_QTIES(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_ACTIVITIES') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_ACTIVITIES
GO

CREATE TABLE DCEREPORT_ACTIVITIES
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  ID                   VARCHAR(32),
  PRIORITY             INT,
  PRODUCTIVE           CHAR(1),
  DTSVALIDFROM         DATETIME2,
  DTSVALIDUNTIL        DATETIME2,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_ACTIVITIES
  PRIMARY KEY (OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INDIRECT_TASKS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INDIRECT_TASKS
GO

CREATE TABLE DCEREPORT_INDIRECT_TASKS
(
  OID                  BIGINT NOT NULL,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  ALLOCATION           FLOAT,
  FTE                  FLOAT,
  MANUALOPERATION_OID  BIGINT,
  PROCESSRESOURCE_OID  BIGINT,
  EMPLOYEE_OID         BIGINT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INDIRECT_TASKS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INDIRECT_TASKS_MANUALOPERATION_OID ON DCEREPORT_INDIRECT_TASKS(MANUALOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INDIRECT_TASKS_PROCESSRESOURCE_OID ON DCEREPORT_INDIRECT_TASKS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_INDIRECT_TASKS_EMPLOYEE_OID ON DCEREPORT_INDIRECT_TASKS(EMPLOYEE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MANUALOPERATIONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MANUALOPERATIONS
GO

CREATE TABLE DCEREPORT_MANUALOPERATIONS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  PRIORITY             INT,
  GROUP_NAME           VARCHAR(64),
  GROUP_DESCRIPTION    VARCHAR(255),
  DTSVALIDFROM         DATETIME2,
  DTSVALIDUNTIL        DATETIME2,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MANUALOPERATIONS
  PRIMARY KEY (OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_ALLOCATIONDETAILS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_ALLOCATIONDETAILS
GO

CREATE TABLE DCEREPORT_ALLOCATIONDETAILS
(
  OID                  BIGINT NOT NULL,
  TASK_OID             BIGINT,
  RESOURCEALLOCATION   FLOAT,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_ALLOCATIONDETAILS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_ALLOCATIONDETAILS_TASK_OID ON DCEREPORT_ALLOCATIONDETAILS(TASK_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MAINTENANCE_TASKS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MAINTENANCE_TASKS
GO

CREATE TABLE DCEREPORT_MAINTENANCE_TASKS
(
  OID                  BIGINT NOT NULL,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  ALLOCATION           FLOAT,
  FTE                  FLOAT,
  MAINTENANCEORDER_OID BIGINT,
  MAINTENANCEORDER_ID  VARCHAR(32),
  MAINTENANCEOPERATION_OID BIGINT,
  MAINTENANCEOPERATION_NAME VARCHAR(64),
  PROCESSRESOURCE_OID  BIGINT,
  EMPLOYEE_OID         BIGINT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MAINTENANCE_TASKS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_MAINTENANCE_TASKS_MAINTENANCEORDER_OID ON DCEREPORT_MAINTENANCE_TASKS(MAINTENANCEORDER_OID)
GO

CREATE INDEX IDCEREPORT_MAINTENANCE_TASKS_MAINTENANCEOPERATION_OID ON DCEREPORT_MAINTENANCE_TASKS(MAINTENANCEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MAINTENANCE_TASKS_PROCESSRESOURCE_OID ON DCEREPORT_MAINTENANCE_TASKS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_MAINTENANCE_TASKS_EMPLOYEE_OID ON DCEREPORT_MAINTENANCE_TASKS(EMPLOYEE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_REJECTOPERATIONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_REJECTOPERATIONS
GO

CREATE TABLE DCEREPORT_REJECTOPERATIONS
(
  OID                  BIGINT NOT NULL,
  TYPE                 INT,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  DIRECT_TASK_OID      BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  EMPLOYEE_OID         BIGINT,
  ITEM_OID             BIGINT,
  REASON_OID           BIGINT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREJECTED_SETUP    FLOAT,
  QTYREJECTED_LOAD     FLOAT,
  QTYREJECTED_RUN      FLOAT,
  QTYREJECTED_UNLOAD   FLOAT,
  QTYREJECTED_RESET    FLOAT,
  QTYREWORKED          FLOAT,
  QTYREWORKABLE        FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_REJECTOPERATIONS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_REJECTOPERATIONS_PROCESSRESOURCE_OID ON DCEREPORT_REJECTOPERATIONS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_REJECTOPERATIONS_MACHINEOPERATION_OID ON DCEREPORT_REJECTOPERATIONS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_REJECTOPERATIONS_DIRECT_TASK_OID ON DCEREPORT_REJECTOPERATIONS(DIRECT_TASK_OID)
GO

CREATE INDEX IDCEREPORT_REJECTOPERATIONS_PRODUCTIONOPERATION_OID ON DCEREPORT_REJECTOPERATIONS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_REJECTOPERATIONS_EMPLOYEE_OID ON DCEREPORT_REJECTOPERATIONS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_REJECTOPERATIONS_ITEM_OID ON DCEREPORT_REJECTOPERATIONS(ITEM_OID)
GO

CREATE INDEX IDCEREPORT_REJECTOPERATIONS_REASON_OID ON DCEREPORT_REJECTOPERATIONS(REASON_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_REWORKOPERATIONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_REWORKOPERATIONS
GO

CREATE TABLE DCEREPORT_REWORKOPERATIONS
(
  OID                  BIGINT NOT NULL,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  REJECTOPERATION_OID  BIGINT,
  DIRECT_TASK_OID      BIGINT,
  EMPLOYEE_OID         BIGINT,
  ITEM_OID             BIGINT,
  REASON_OID           BIGINT,
  DESCRIPTION          VARCHAR(255),
  QTYREWORKED          FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_REWORKOPERATIONS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_REWORKOPERATIONS_REJECTOPERATION_OID ON DCEREPORT_REWORKOPERATIONS(REJECTOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_REWORKOPERATIONS_DIRECT_TASK_OID ON DCEREPORT_REWORKOPERATIONS(DIRECT_TASK_OID)
GO

CREATE INDEX IDCEREPORT_REWORKOPERATIONS_EMPLOYEE_OID ON DCEREPORT_REWORKOPERATIONS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_REWORKOPERATIONS_ITEM_OID ON DCEREPORT_REWORKOPERATIONS(ITEM_OID)
GO

CREATE INDEX IDCEREPORT_REWORKOPERATIONS_REASON_OID ON DCEREPORT_REWORKOPERATIONS(REASON_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_REJECTREASONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_REJECTREASONS
GO

CREATE TABLE DCEREPORT_REJECTREASONS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  CATEGORY             VARCHAR(64),
  REASONGROUP_NAME     VARCHAR(64),
  REASONGROUP_DESCRIPTION VARCHAR(255),
  REASONGROUP_TYPE     INT,
  REASONGROUP_CATEGORY VARCHAR(64),
  DTSVALIDFROM         DATETIME2,
  DTSVALIDUNTIL        DATETIME2,
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_REJECTREASONS
  PRIMARY KEY (OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_ALARMS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_ALARMS
GO

CREATE TABLE DCEREPORT_ALARMS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  SEVERITY             INT,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  PROCESSRESOURCE_OID  BIGINT,
  EQUIPMENTMODULE_OID  BIGINT,
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_ALARMS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_ALARMS_PROCESSRESOURCE_OID ON DCEREPORT_ALARMS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_ALARMS_EQUIPMENTMODULE_OID ON DCEREPORT_ALARMS(EQUIPMENTMODULE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INTERRUPTOPERATIONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INTERRUPTOPERATIONS
GO

CREATE TABLE DCEREPORT_INTERRUPTOPERATIONS
(
  OID                  BIGINT NOT NULL,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  REASON_OID           BIGINT,
  DESCRIPTION          VARCHAR(255),
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  ALARM_OID            BIGINT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INTERRUPTOPERATIONS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INTERRUPTOPERATIONS_REASON_OID ON DCEREPORT_INTERRUPTOPERATIONS(REASON_OID)
GO

CREATE INDEX IDCEREPORT_INTERRUPTOPERATIONS_PROCESSRESOURCE_OID ON DCEREPORT_INTERRUPTOPERATIONS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_INTERRUPTOPERATIONS_MACHINEOPERATION_OID ON DCEREPORT_INTERRUPTOPERATIONS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INTERRUPTOPERATIONS_ALARM_OID ON DCEREPORT_INTERRUPTOPERATIONS(ALARM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INTERRUPTREASONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INTERRUPTREASONS
GO

CREATE TABLE DCEREPORT_INTERRUPTREASONS
(
  OID                  BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  OEECATEGORY          VARCHAR(64),
  SEVERITY             INT,
  REASONGROUP_NAME     VARCHAR(64),
  REASONGROUP_DESCRIPTION VARCHAR(255),
  DTSVALIDFROM         DATETIME2,
  DTSVALIDUNTIL        DATETIME2,
  DTSUPDATE            DATETIME2,
  USRDTS1              DATETIME2,
  USRDTS2              DATETIME2,
  USRDTS3              DATETIME2,
  USRDTS4              DATETIME2,
  USRDTS5              DATETIME2,
  USRFLG1              CHAR(1),
  USRFLG2              CHAR(1),
  USRFLG3              CHAR(1),
  USRFLG4              CHAR(1),
  USRFLG5              CHAR(1),
  USRNUM1              FLOAT,
  USRNUM2              FLOAT,
  USRNUM3              FLOAT,
  USRNUM4              FLOAT,
  USRNUM5              FLOAT,
  USRTXT1              VARCHAR(255),
  USRTXT2              VARCHAR(255),
  USRTXT3              VARCHAR(255),
  USRTXT4              VARCHAR(255),
  USRTXT5              VARCHAR(255),
  CONSTRAINT PK_DCEREPORT_INTERRUPTREASONS
  PRIMARY KEY (OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_ISPRESENTOPERATIONS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_ISPRESENTOPERATIONS
GO

CREATE TABLE DCEREPORT_ISPRESENTOPERATIONS
(
  OID                  BIGINT NOT NULL,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  EMPLOYEE_OID         BIGINT,
  PROCESSRESOURCE_OID  BIGINT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_ISPRESENTOPERATIONS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_ISPRESENTOPERATIONS_EMPLOYEE_OID ON DCEREPORT_ISPRESENTOPERATIONS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_ISPRESENTOPERATIONS_PROCESSRESOURCE_OID ON DCEREPORT_ISPRESENTOPERATIONS(PROCESSRESOURCE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MES_EVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MES_EVENTS
GO

CREATE TABLE DCEREPORT_MES_EVENTS
(
  OID                  BIGINT NOT NULL,
  TYPE                 INT,
  DTS                  DATETIME2,
  CATEGORY             VARCHAR(255),
  DESCRIPTION          VARCHAR(1000),
  VALUE                VARCHAR(255),
  PREVIOUS_VALUE       VARCHAR(255),
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PROCESSRESOURCE_OID  BIGINT,
  ITEM_OID             BIGINT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MES_EVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_MES_EVENTS_EMPLOYEE_OID ON DCEREPORT_MES_EVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_MES_EVENTS_DEVICE_OID ON DCEREPORT_MES_EVENTS(DEVICE_OID)
GO

CREATE INDEX IDCEREPORT_MES_EVENTS_PRODUCTIONORDER_OID ON DCEREPORT_MES_EVENTS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_MES_EVENTS_PRODUCTIONOPERATION_OID ON DCEREPORT_MES_EVENTS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MES_EVENTS_PROCESSRESOURCE_OID ON DCEREPORT_MES_EVENTS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_MES_EVENTS_ITEM_OID ON DCEREPORT_MES_EVENTS(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_OEEOPERATIONREPORTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_OEEOPERATIONREPORTS
GO

CREATE TABLE DCEREPORT_OEEOPERATIONREPORTS
(
  OID                  BIGINT NOT NULL,
  OEEREPORT_OID        BIGINT,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  SHIFT_NAME           VARCHAR(32),
  SHIFT_DESCRIPTION    VARCHAR(64),
  SHIFT_ISPRODUCTIVE   CHAR(1),
  SHIFT_START          DATETIME2,
  SHIFT_STOP           DATETIME2,
  STATUS               INT,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  OEE                  FLOAT,
  AVAILABILITY         FLOAT,
  PRODUCTIVITY         FLOAT,
  QUALITY              FLOAT,
  CAPACITY             FLOAT,
  FTR                  FLOAT,
  OEETARGET            FLOAT,
  AVAILABILITYTARGET   FLOAT,
  PRODUCTIVITYTARGET   FLOAT,
  QUALITYTARGET        FLOAT,
  CAPACITYTARGET       FLOAT,
  DURATION_TOTAL       BIGINT,
  DURATION_UNAVAILABLE_OEE1 BIGINT,
  NO_PLANNING_OEE1A    BIGINT,
  PLANNED_INTERRUPTS_OEE1B BIGINT,
  DURATION_PLANNED     BIGINT,
  AVAILABILITY_LOSSES_OEE2 BIGINT,
  SETUPS_OEE2A         BIGINT,
  BREAKDOWNS_OEE2B     BIGINT,
  DURATION_OPERATIONAL BIGINT,
  PRODUCTIVITY_LOSSES_OEE3 BIGINT,
  SPEED_LOSSES_OEE3A   BIGINT,
  MICROSTOPS_OEE3B     BIGINT,
  DURATION_NET_OPERATIONAL BIGINT,
  QUALITY_LOSSES_OEE4  BIGINT,
  QTY                  FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREWORKED          FLOAT,
  DURATION_EFF_OPERATIONAL BIGINT,
  AVERAGE_RESOURCE_ALLOCATION FLOAT,
  TOTAL_LABOUR_DURATION BIGINT,
  PRODUCTIVE_LABOUR_DURATION BIGINT,
  TARGET_SPEED         VARCHAR(255),
  ACTUAL_SPEED         VARCHAR(255),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_OEEOPERATIONREPORTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_OEEOPERATIONREPORTS_OEEREPORT_OID ON DCEREPORT_OEEOPERATIONREPORTS(OEEREPORT_OID)
GO

CREATE INDEX IDCEREPORT_OEEOPERATIONREPORTS_PROCESSRESOURCE_OID ON DCEREPORT_OEEOPERATIONREPORTS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_OEEOPERATIONREPORTS_MACHINEOPERATION_OID ON DCEREPORT_OEEOPERATIONREPORTS(MACHINEOPERATION_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_OEEREPORTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_OEEREPORTS
GO

CREATE TABLE DCEREPORT_OEEREPORTS
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  SHIFT_NAME           VARCHAR(32),
  SHIFT_DESCRIPTION    VARCHAR(64),
  SHIFT_ISPRODUCTIVE   CHAR(1),
  SHIFT_START          DATETIME2,
  SHIFT_STOP           DATETIME2,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  STATUS               INT,
  OEE                  FLOAT,
  AVAILABILITY         FLOAT,
  PRODUCTIVITY         FLOAT,
  QUALITY              FLOAT,
  CAPACITY             FLOAT,
  FTR                  FLOAT,
  OEETARGET            FLOAT,
  AVAILABILITYTARGET   FLOAT,
  PRODUCTIVITYTARGET   FLOAT,
  QUALITYTARGET        FLOAT,
  CAPACITYTARGET       FLOAT,
  DURATION_TOTAL       BIGINT,
  DURATION_UNAVAILABLE_OEE1 BIGINT,
  NO_PLANNING_OEE1A    BIGINT,
  PLANNED_INTERRUPTS_OEE1B BIGINT,
  DURATION_PLANNED     BIGINT,
  AVAILABILITY_LOSSES_OEE2 BIGINT,
  SETUPS_OEE2A         BIGINT,
  BREAKDOWNS_OEE2B     BIGINT,
  DURATION_OPERATIONAL BIGINT,
  PRODUCTIVITY_LOSSES_OEE3 BIGINT,
  SPEED_LOSSES_OEE3A   BIGINT,
  MICROSTOPS_OEE3B     BIGINT,
  DURATION_NET_OPERATIONAL BIGINT,
  QUALITY_LOSSES_OEE4  BIGINT,
  DURATION_EFF_OPERATIONAL BIGINT,
  AVERAGE_RESOURCE_ALLOCATION FLOAT,
  TOTAL_LABOUR_DURATION BIGINT,
  PRODUCTIVE_LABOUR_DURATION BIGINT,
  QTYPRODUCED          FLOAT,
  QTYINCOMPLETE        FLOAT,
  QTYNRFT              FLOAT,
  QTYREJECT            FLOAT,
  QTYREJECTED          FLOAT,
  QTYREWORKED          FLOAT,
  UOM                  VARCHAR(32),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_OEEREPORTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_OEEREPORTS_PROCESSRESOURCE_OID ON DCEREPORT_OEEREPORTS(PROCESSRESOURCE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_SETUPINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_SETUPINSTR
GO

CREATE TABLE DCEREPORT_SETUPINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  SETUPPARAMETER_OID   BIGINT NOT NULL,
  SETUPPARAMETER_TYPE  VARCHAR(7),
  SETUPPARAMETER_NAME  VARCHAR(32),
  SETUPPARAMETER_DESCRIPTION VARCHAR(255),
  STANDARDTEXTVALUE    VARCHAR(255),
  TEXTVALUE            VARCHAR(255),
  QTYSTANDARD          FLOAT,
  QTYTARGET            FLOAT,
  TARGETEDITABLE       CHAR(1),
  UPPER_SETUP_LIMIT    FLOAT,
  LOWER_SETUP_LIMIT    FLOAT,
  UOM                  VARCHAR(32),
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_SETUPINSTR
  PRIMARY KEY (OID, SETUPPARAMETER_OID)
)
GO

CREATE INDEX IDCEREPORT_SETUPINSTR_PROCESSRESOURCE_OID ON DCEREPORT_SETUPINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_SETUPINSTR_MACHINEOPERATION_OID ON DCEREPORT_SETUPINSTR(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_SETUPINSTR_PRODUCTIONOPERATION_OID ON DCEREPORT_SETUPINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_SETUPINSTR_PRODUCTIONORDER_OID ON DCEREPORT_SETUPINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_SETUPINSTR_INSTRUCTIONSHEET_OID ON DCEREPORT_SETUPINSTR(INSTRUCTIONSHEET_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_SETUPEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_SETUPEVENTS
GO

CREATE TABLE DCEREPORT_SETUPEVENTS
(
  OID                  BIGINT NOT NULL,
  SETUPINSTRUCTION_OID BIGINT,
  SETUPPARAMETER_OID   BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  VALUE                VARCHAR(255),
  UOM                  VARCHAR(32),
  DTS                  DATETIME2,
  DESCRIPTION          VARCHAR(1000),
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_SETUPEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_SETUPEVENTS_SETUPINSTRUCTION_OID ON DCEREPORT_SETUPEVENTS(SETUPINSTRUCTION_OID)
GO

CREATE INDEX IDCEREPORT_SETUPEVENTS_SETUPPARAMETER_OID ON DCEREPORT_SETUPEVENTS(SETUPPARAMETER_OID)
GO

CREATE INDEX IDCEREPORT_SETUPEVENTS_EMPLOYEE_OID ON DCEREPORT_SETUPEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_SETUPEVENTS_DEVICE_OID ON DCEREPORT_SETUPEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DATACOLLECTIONINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DATACOLLECTIONINSTR
GO

CREATE TABLE DCEREPORT_DATACOLLECTIONINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  PROCESSPARAMETER_OID BIGINT NOT NULL,
  PROCESSPARAMETER_NAME VARCHAR(32),
  PROCESSPARAMETER_DESCRIPTION VARCHAR(255),
  QTYSTANDARD          FLOAT,
  QTYTARGET            FLOAT,
  UPPER_WARNING_LIMIT  FLOAT,
  LOWER_WARNING_LIMIT  FLOAT,
  UPPER_ERROR_LIMIT    FLOAT,
  LOWER_ERROR_LIMIT    FLOAT,
  QTYACTUAL            FLOAT,
  UOM                  VARCHAR(32),
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DATACOLLECTIONINSTR
  PRIMARY KEY (OID, PROCESSPARAMETER_OID)
)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONINSTR_PROCESSRESOURCE_OID ON DCEREPORT_DATACOLLECTIONINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONINSTR_MACHINEOPERATION_OID ON DCEREPORT_DATACOLLECTIONINSTR(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONINSTR_PRODUCTIONOPERATION_OID ON DCEREPORT_DATACOLLECTIONINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONINSTR_PRODUCTIONORDER_OID ON DCEREPORT_DATACOLLECTIONINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONINSTR_INSTRUCTIONSHEET_OID ON DCEREPORT_DATACOLLECTIONINSTR(INSTRUCTIONSHEET_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DATACOLLECTIONEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DATACOLLECTIONEVENTS
GO

CREATE TABLE DCEREPORT_DATACOLLECTIONEVENTS
(
  OID                  BIGINT NOT NULL,
  DATACOLLECTIONINSTRUCTION_OID BIGINT,
  PROCESSPARAMETER_OID BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  VALUE                VARCHAR(255),
  UOM                  VARCHAR(32),
  CATEGORY             VARCHAR(255),
  DTS                  DATETIME2,
  DESCRIPTION          VARCHAR(1000),
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DATACOLLECTIONEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONEVENTS_DATACOLLECTIONINSTRUCTION_OID ON DCEREPORT_DATACOLLECTIONEVENTS(DATACOLLECTIONINSTRUCTION_OID)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONEVENTS_PROCESSPARAMETER_OID ON DCEREPORT_DATACOLLECTIONEVENTS(PROCESSPARAMETER_OID)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONEVENTS_EMPLOYEE_OID ON DCEREPORT_DATACOLLECTIONEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_DATACOLLECTIONEVENTS_DEVICE_OID ON DCEREPORT_DATACOLLECTIONEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MEASUREMENTINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MEASUREMENTINSTR
GO

CREATE TABLE DCEREPORT_MEASUREMENTINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  MEASUREMENT_OID      BIGINT NOT NULL,
  MEASUREMENT_NAME     VARCHAR(32),
  MEASUREMENT_DESCRIPTION VARCHAR(255),
  QTYSTANDARD          FLOAT,
  UCL                  FLOAT,
  LCL                  FLOAT,
  USL                  FLOAT,
  LSL                  FLOAT,
  AVERAGE              FLOAT,
  VALUERANGE           FLOAT,
  UOM                  VARCHAR(32),
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MEASUREMENTINSTR
  PRIMARY KEY (OID, MEASUREMENT_OID)
)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTINSTR_PROCESSRESOURCE_OID ON DCEREPORT_MEASUREMENTINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTINSTR_MACHINEOPERATION_OID ON DCEREPORT_MEASUREMENTINSTR(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTINSTR_PRODUCTIONOPERATION_OID ON DCEREPORT_MEASUREMENTINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTINSTR_PRODUCTIONORDER_OID ON DCEREPORT_MEASUREMENTINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTINSTR_INSTRUCTIONSHEET_OID ON DCEREPORT_MEASUREMENTINSTR(INSTRUCTIONSHEET_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_MEASUREMENTEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_MEASUREMENTEVENTS
GO

CREATE TABLE DCEREPORT_MEASUREMENTEVENTS
(
  OID                  BIGINT NOT NULL,
  MEASUREMENTINSTRUCTION_OID BIGINT,
  MEASUREMENT_OID      BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  VALUE                VARCHAR(255),
  UOM                  VARCHAR(32),
  DTS                  DATETIME2,
  DESCRIPTION          VARCHAR(1000),
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_MEASUREMENTEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTEVENTS_MEASUREMENTINSTRUCTION_OID ON DCEREPORT_MEASUREMENTEVENTS(MEASUREMENTINSTRUCTION_OID)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTEVENTS_MEASUREMENT_OID ON DCEREPORT_MEASUREMENTEVENTS(MEASUREMENT_OID)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTEVENTS_EMPLOYEE_OID ON DCEREPORT_MEASUREMENTEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_MEASUREMENTEVENTS_DEVICE_OID ON DCEREPORT_MEASUREMENTEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INPUTINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INPUTINSTR
GO

CREATE TABLE DCEREPORT_INPUTINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  VALUE                VARCHAR(255),
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INPUTINSTR
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INPUTINSTR_PROCESSRESOURCE_OID ON DCEREPORT_INPUTINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_INPUTINSTR_MACHINEOPERATION_OID ON DCEREPORT_INPUTINSTR(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUTINSTR_PRODUCTIONOPERATION_OID ON DCEREPORT_INPUTINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUTINSTR_PRODUCTIONORDER_OID ON DCEREPORT_INPUTINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_INPUTINSTR_INSTRUCTIONSHEET_OID ON DCEREPORT_INPUTINSTR(INSTRUCTIONSHEET_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INPUTEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INPUTEVENTS
GO

CREATE TABLE DCEREPORT_INPUTEVENTS
(
  OID                  BIGINT NOT NULL,
  INPUTINSTRUCTION_OID BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  VALUE                VARCHAR(255),
  COMMENTS             VARCHAR(1000),
  DTS                  DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INPUTEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INPUTEVENTS_INPUTINSTRUCTION_OID ON DCEREPORT_INPUTEVENTS(INPUTINSTRUCTION_OID)
GO

CREATE INDEX IDCEREPORT_INPUTEVENTS_EMPLOYEE_OID ON DCEREPORT_INPUTEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_INPUTEVENTS_DEVICE_OID ON DCEREPORT_INPUTEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_CHECKINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_CHECKINSTR
GO

CREATE TABLE DCEREPORT_CHECKINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  VALUE                FLOAT,
  INPUTTYPE            INT,
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_CHECKINSTR
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_CHECKINSTR_PROCESSRESOURCE_OID ON DCEREPORT_CHECKINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_CHECKINSTR_MACHINEOPERATION_OID ON DCEREPORT_CHECKINSTR(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_CHECKINSTR_PRODUCTIONOPERATION_OID ON DCEREPORT_CHECKINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_CHECKINSTR_PRODUCTIONORDER_OID ON DCEREPORT_CHECKINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_CHECKINSTR_INSTRUCTIONSHEET_OID ON DCEREPORT_CHECKINSTR(INSTRUCTIONSHEET_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_CHECKEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_CHECKEVENTS
GO

CREATE TABLE DCEREPORT_CHECKEVENTS
(
  OID                  BIGINT NOT NULL,
  CHECKINSTRUCTION_OID BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  VALUE                VARCHAR(255),
  COMMENTS             VARCHAR(1000),
  DTS                  DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_CHECKEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_CHECKEVENTS_CHECKINSTRUCTION_OID ON DCEREPORT_CHECKEVENTS(CHECKINSTRUCTION_OID)
GO

CREATE INDEX IDCEREPORT_CHECKEVENTS_EMPLOYEE_OID ON DCEREPORT_CHECKEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_CHECKEVENTS_DEVICE_OID ON DCEREPORT_CHECKEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_PRINTINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_PRINTINSTR
GO

CREATE TABLE DCEREPORT_PRINTINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  DOCUMENT_NAME        VARCHAR(64),
  DOCUMENT_DESCRIPTION VARCHAR(255),
  COPIES               INT,
  COPIESFIXED          CHAR(1),
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_PRINTINSTR
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_PRINTINSTR_PROCESSRESOURCE_OID ON DCEREPORT_PRINTINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_PRINTINSTR_MACHINEOPERATION_OID ON DCEREPORT_PRINTINSTR(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_PRINTINSTR_PRODUCTIONOPERATION_OID ON DCEREPORT_PRINTINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_PRINTINSTR_PRODUCTIONORDER_OID ON DCEREPORT_PRINTINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_PRINTINSTR_INSTRUCTIONSHEET_OID ON DCEREPORT_PRINTINSTR(INSTRUCTIONSHEET_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_PRINTEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_PRINTEVENTS
GO

CREATE TABLE DCEREPORT_PRINTEVENTS
(
  OID                  BIGINT NOT NULL,
  PRINTINSTRUCTION_OID BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  COMMENTS             VARCHAR(1000),
  DTS                  DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_PRINTEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_PRINTEVENTS_PRINTINSTRUCTION_OID ON DCEREPORT_PRINTEVENTS(PRINTINSTRUCTION_OID)
GO

CREATE INDEX IDCEREPORT_PRINTEVENTS_EMPLOYEE_OID ON DCEREPORT_PRINTEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_PRINTEVENTS_DEVICE_OID ON DCEREPORT_PRINTEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('OBJTREP_INSPECTIONINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE OBJTREP_INSPECTIONINSTR
GO

CREATE TABLE OBJTREP_INSPECTIONINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  INSPECTIONTYPE       VARCHAR(64),
  INSPECTIONSHEETOID   BIGINT,
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_OBJTREP_INSPECTIONINSTR
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IOBJTREP_INSPECTIONINSTR_PROCESSRESOURCE_OID ON OBJTREP_INSPECTIONINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IOBJTREP_INSPECTIONINSTR_MACHINEOPERATION_OID ON OBJTREP_INSPECTIONINSTR(MACHINEOPERATION_OID)
GO

CREATE INDEX IOBJTREP_INSPECTIONINSTR_PRODUCTIONOPERATION_OID ON OBJTREP_INSPECTIONINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IOBJTREP_INSPECTIONINSTR_PRODUCTIONORDER_OID ON OBJTREP_INSPECTIONINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IOBJTREP_INSPECTIONINSTR_INSTRUCTIONSHEET_OID ON OBJTREP_INSPECTIONINSTR(INSTRUCTIONSHEET_OID)
GO

CREATE INDEX IOBJTREP_INSPECTIONINSTR_INSPECTIONSHEETOID ON OBJTREP_INSPECTIONINSTR(INSPECTIONSHEETOID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('OBJTREP_INSPECTIONEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE OBJTREP_INSPECTIONEVENTS
GO

CREATE TABLE OBJTREP_INSPECTIONEVENTS
(
  OID                  BIGINT NOT NULL,
  INSPECTIONINSTRUCTION_OID BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  COMMENTS             VARCHAR(1000),
  DTS                  DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_OBJTREP_INSPECTIONEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IOBJTREP_INSPECTIONEVENTS_INSPECTIONINSTRUCTION_OID ON OBJTREP_INSPECTIONEVENTS(INSPECTIONINSTRUCTION_OID)
GO

CREATE INDEX IOBJTREP_INSPECTIONEVENTS_EMPLOYEE_OID ON OBJTREP_INSPECTIONEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IOBJTREP_INSPECTIONEVENTS_DEVICE_OID ON OBJTREP_INSPECTIONEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DOCUMENTEDINSTR') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DOCUMENTEDINSTR
GO

CREATE TABLE DCEREPORT_DOCUMENTEDINSTR
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT NOT NULL,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  INSTRUCTIONSHEET_OID BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  INFO                 VARCHAR(1024),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DOCUMENTEDINSTR
  PRIMARY KEY (OID, MACHINEOPERATION_OID)
)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEDINSTR_PROCESSRESOURCE_OID ON DCEREPORT_DOCUMENTEDINSTR(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEDINSTR_PRODUCTIONOPERATION_OID ON DCEREPORT_DOCUMENTEDINSTR(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEDINSTR_PRODUCTIONORDER_OID ON DCEREPORT_DOCUMENTEDINSTR(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEDINSTR_INSTRUCTIONSHEET_OID ON DCEREPORT_DOCUMENTEDINSTR(INSTRUCTIONSHEET_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INSTRUCTIONDOCS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INSTRUCTIONDOCS
GO

CREATE TABLE DCEREPORT_INSTRUCTIONDOCS
(
  OID                  BIGINT NOT NULL,
  INSTRUCTION_OID      BIGINT NOT NULL,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(255),
  TYPE                 VARCHAR(10),
  REFERENCE            VARCHAR(255),
  TEXT                 VARCHAR(1024),
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INSTRUCTIONDOCS
  PRIMARY KEY (OID, INSTRUCTION_OID)
)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_DOCUMENTEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_DOCUMENTEVENTS
GO

CREATE TABLE DCEREPORT_DOCUMENTEVENTS
(
  OID                  BIGINT NOT NULL,
  INSTRUCTION_OID      BIGINT,
  DOCUMENT_OID         BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  CATEGORY             VARCHAR(255),
  DTS                  DATETIME2,
  COMMENTS             VARCHAR(1000),
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_DOCUMENTEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEVENTS_INSTRUCTION_OID ON DCEREPORT_DOCUMENTEVENTS(INSTRUCTION_OID)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEVENTS_DOCUMENT_OID ON DCEREPORT_DOCUMENTEVENTS(DOCUMENT_OID)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEVENTS_EMPLOYEE_OID ON DCEREPORT_DOCUMENTEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_DOCUMENTEVENTS_DEVICE_OID ON DCEREPORT_DOCUMENTEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INSTRUCTIONSHEETS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INSTRUCTIONSHEETS
GO

CREATE TABLE DCEREPORT_INSTRUCTIONSHEETS
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  NAME                 VARCHAR(64),
  DESCRIPTION          VARCHAR(1024),
  ID                   VARCHAR(64),
  STATUS               VARCHAR(8),
  QUALITYSHEET         CHAR(1),
  DOUBLESIGNOFF        CHAR(1),
  TAKEOFFSHEET         CHAR(1),
  DTSLASTEXECUTED      DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INSTRUCTIONSHEETS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INSTRUCTIONSHEETS_PROCESSRESOURCE_OID ON DCEREPORT_INSTRUCTIONSHEETS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_INSTRUCTIONSHEETS_MACHINEOPERATION_OID ON DCEREPORT_INSTRUCTIONSHEETS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INSTRUCTIONSHEETS_PRODUCTIONOPERATION_OID ON DCEREPORT_INSTRUCTIONSHEETS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INSTRUCTIONSHEETS_PRODUCTIONORDER_OID ON DCEREPORT_INSTRUCTIONSHEETS(PRODUCTIONORDER_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_SHEETEVENTS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_SHEETEVENTS
GO

CREATE TABLE DCEREPORT_SHEETEVENTS
(
  OID                  BIGINT NOT NULL,
  INSTRUCTIONSHEET_OID BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  CATEGORY             VARCHAR(255),
  COMMENTS             VARCHAR(1000),
  DTS                  DATETIME2,
  RESULT               INT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_SHEETEVENTS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_SHEETEVENTS_INSTRUCTIONSHEET_OID ON DCEREPORT_SHEETEVENTS(INSTRUCTIONSHEET_OID)
GO

CREATE INDEX IDCEREPORT_SHEETEVENTS_EMPLOYEE_OID ON DCEREPORT_SHEETEVENTS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_SHEETEVENTS_DEVICE_OID ON DCEREPORT_SHEETEVENTS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INPUT_TARGETS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INPUT_TARGETS
GO

CREATE TABLE DCEREPORT_INPUT_TARGETS
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  LOCATION_OID         BIGINT,
  ITEM_OID             BIGINT,
  LOT                  VARCHAR(32),
  SUBLOT               VARCHAR(32),
  TARGET               FLOAT,
  QTY                  FLOAT,
  UOM                  VARCHAR(32),
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INPUT_TARGETS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INPUT_TARGETS_PROCESSRESOURCE_OID ON DCEREPORT_INPUT_TARGETS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_TARGETS_MACHINEOPERATION_OID ON DCEREPORT_INPUT_TARGETS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_TARGETS_PRODUCTIONOPERATION_OID ON DCEREPORT_INPUT_TARGETS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_TARGETS_PRODUCTIONORDER_OID ON DCEREPORT_INPUT_TARGETS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_TARGETS_LOCATION_OID ON DCEREPORT_INPUT_TARGETS(LOCATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_TARGETS_ITEM_OID ON DCEREPORT_INPUT_TARGETS(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INPUT_ACTUALS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INPUT_ACTUALS
GO

CREATE TABLE DCEREPORT_INPUT_ACTUALS
(
  OID                  BIGINT NOT NULL,
  INPUT_TARGET_OID     BIGINT,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  STATUS               INT,
  LOCATION_OID         BIGINT,
  ITEM_OID             BIGINT,
  LOT_OID              BIGINT,
  LOT                  VARCHAR(32),
  SUBLOT               VARCHAR(32),
  INVENTORY_CODE_1     VARCHAR(64),
  INVENTORY_CODE_2     VARCHAR(64),
  INVENTORY_CODE_3     VARCHAR(64),
  INVENTORY_CODE_4     VARCHAR(64),
  INVENTORY_CODE_5     VARCHAR(64),
  QTY                  FLOAT,
  UOM                  VARCHAR(32),
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  CONTAINER_OID        BIGINT,
  NEST_CONTAINER_OID   BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INPUT_ACTUALS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_INPUT_TARGET_OID ON DCEREPORT_INPUT_ACTUALS(INPUT_TARGET_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_PROCESSRESOURCE_OID ON DCEREPORT_INPUT_ACTUALS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_MACHINEOPERATION_OID ON DCEREPORT_INPUT_ACTUALS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_PRODUCTIONOPERATION_OID ON DCEREPORT_INPUT_ACTUALS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_PRODUCTIONORDER_OID ON DCEREPORT_INPUT_ACTUALS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_LOCATION_OID ON DCEREPORT_INPUT_ACTUALS(LOCATION_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_ITEM_OID ON DCEREPORT_INPUT_ACTUALS(ITEM_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_LOT_OID ON DCEREPORT_INPUT_ACTUALS(LOT_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_CONTAINER_OID ON DCEREPORT_INPUT_ACTUALS(CONTAINER_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_NEST_CONTAINER_OID ON DCEREPORT_INPUT_ACTUALS(NEST_CONTAINER_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_EMPLOYEE_OID ON DCEREPORT_INPUT_ACTUALS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_INPUT_ACTUALS_DEVICE_OID ON DCEREPORT_INPUT_ACTUALS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_OUTPUT_TARGETS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_OUTPUT_TARGETS
GO

CREATE TABLE DCEREPORT_OUTPUT_TARGETS
(
  OID                  BIGINT NOT NULL,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  LOCATION_OID         BIGINT,
  ITEM_OID             BIGINT,
  LOT                  VARCHAR(32),
  SUBLOT               VARCHAR(32),
  QTY                  FLOAT,
  UOM                  VARCHAR(32),
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_OUTPUT_TARGETS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_OUTPUT_TARGETS_PROCESSRESOURCE_OID ON DCEREPORT_OUTPUT_TARGETS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_TARGETS_MACHINEOPERATION_OID ON DCEREPORT_OUTPUT_TARGETS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_TARGETS_PRODUCTIONOPERATION_OID ON DCEREPORT_OUTPUT_TARGETS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_TARGETS_PRODUCTIONORDER_OID ON DCEREPORT_OUTPUT_TARGETS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_TARGETS_LOCATION_OID ON DCEREPORT_OUTPUT_TARGETS(LOCATION_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_TARGETS_ITEM_OID ON DCEREPORT_OUTPUT_TARGETS(ITEM_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_OUTPUT_ACTUALS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_OUTPUT_ACTUALS
GO

CREATE TABLE DCEREPORT_OUTPUT_ACTUALS
(
  OID                  BIGINT NOT NULL,
  OUTPUT_TARGET_OID    BIGINT,
  PROCESSRESOURCE_OID  BIGINT,
  MACHINEOPERATION_OID BIGINT,
  PRODUCTIONOPERATION_OID BIGINT,
  PRODUCTIONORDER_OID  BIGINT,
  STATUS               INT,
  LOCATION_OID         BIGINT,
  ITEM_OID             BIGINT,
  LOT_OID              BIGINT,
  LOT                  VARCHAR(32),
  SUBLOT               VARCHAR(32),
  INVENTORY_CODE_1     VARCHAR(64),
  INVENTORY_CODE_2     VARCHAR(64),
  INVENTORY_CODE_3     VARCHAR(64),
  INVENTORY_CODE_4     VARCHAR(64),
  INVENTORY_CODE_5     VARCHAR(64),
  QTY                  FLOAT,
  UOM                  VARCHAR(32),
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  CONTAINER_OID        BIGINT,
  NEST_CONTAINER_OID   BIGINT,
  EMPLOYEE_OID         BIGINT,
  DEVICE_OID           BIGINT,
  QTYREWORKABLE        FLOAT,
  QTYNRFT              FLOAT,
  QTYREWORKED          FLOAT,
  QTYADJUSTED          FLOAT,
  QTYREJECTED          FLOAT,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_OUTPUT_ACTUALS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_OUTPUT_TARGET_OID ON DCEREPORT_OUTPUT_ACTUALS(OUTPUT_TARGET_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_PROCESSRESOURCE_OID ON DCEREPORT_OUTPUT_ACTUALS(PROCESSRESOURCE_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_MACHINEOPERATION_OID ON DCEREPORT_OUTPUT_ACTUALS(MACHINEOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_PRODUCTIONOPERATION_OID ON DCEREPORT_OUTPUT_ACTUALS(PRODUCTIONOPERATION_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_PRODUCTIONORDER_OID ON DCEREPORT_OUTPUT_ACTUALS(PRODUCTIONORDER_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_LOCATION_OID ON DCEREPORT_OUTPUT_ACTUALS(LOCATION_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_ITEM_OID ON DCEREPORT_OUTPUT_ACTUALS(ITEM_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_LOT_OID ON DCEREPORT_OUTPUT_ACTUALS(LOT_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_CONTAINER_OID ON DCEREPORT_OUTPUT_ACTUALS(CONTAINER_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_NEST_CONTAINER_OID ON DCEREPORT_OUTPUT_ACTUALS(NEST_CONTAINER_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_EMPLOYEE_OID ON DCEREPORT_OUTPUT_ACTUALS(EMPLOYEE_OID)
GO

CREATE INDEX IDCEREPORT_OUTPUT_ACTUALS_DEVICE_OID ON DCEREPORT_OUTPUT_ACTUALS(DEVICE_OID)
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DCEREPORT_INSTRUCTIONTASKS') AND OBJECTPROPERTY(ID, 'IsUserTable') = 1)
DROP TABLE DCEREPORT_INSTRUCTIONTASKS
GO

CREATE TABLE DCEREPORT_INSTRUCTIONTASKS
(
  OID                  BIGINT NOT NULL,
  TYPE                 INT,
  STATUS               INT,
  INSTRUCTION_OID      BIGINT,
  INSTRUCTION_TYPE     VARCHAR(25),
  DTSSCHEDULEDSTART    DATETIME2,
  DTSSCHEDULEDSTOP     DATETIME2,
  DTSSTART             DATETIME2,
  DTSSTOP              DATETIME2,
  DTSUPDATE            DATETIME2,
  CONSTRAINT PK_DCEREPORT_INSTRUCTIONTASKS
  PRIMARY KEY (OID)
)
GO

CREATE INDEX IDCEREPORT_INSTRUCTIONTASKS_INSTRUCTION_OID ON DCEREPORT_INSTRUCTIONTASKS(INSTRUCTION_OID)
GO

