IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_DEVICE_LOGINS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_DEVICE_LOGINS'))  ALTER TABLE DCEREPORT_DEVICE_LOGINS DROP CONSTRAINT FK_DCEREPORT_DEVICE_LOGINS_DEVICE_OID
ALTER TABLE DCEREPORT_DEVICE_LOGINS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_DEVICE_LOGINS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_DEVICE_LOGINS NOCHECK CONSTRAINT FK_DCEREPORT_DEVICE_LOGINS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_DEVICE_LOGINS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_DEVICE_LOGINS'))  ALTER TABLE DCEREPORT_DEVICE_LOGINS DROP CONSTRAINT FK_DCEREPORT_DEVICE_LOGINS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_DEVICE_LOGINS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_DEVICE_LOGINS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_DEVICE_LOGINS NOCHECK CONSTRAINT FK_DCEREPORT_DEVICE_LOGINS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUNDORDERS_CARRIER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUNDORDERS'))  ALTER TABLE DCEREPORT_INBOUNDORDERS DROP CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_CARRIER_OID
ALTER TABLE DCEREPORT_INBOUNDORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_CARRIER_OID  FOREIGN KEY(CARRIER_OID)  REFERENCES DCEREPORT_CARRIERS(OID)
ALTER TABLE DCEREPORT_INBOUNDORDERS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_CARRIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUNDORDERS_CUSTOMER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUNDORDERS'))  ALTER TABLE DCEREPORT_INBOUNDORDERS DROP CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_CUSTOMER_OID
ALTER TABLE DCEREPORT_INBOUNDORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_CUSTOMER_OID  FOREIGN KEY(CUSTOMER_OID)  REFERENCES DCEREPORT_CUSTOMERS(OID)
ALTER TABLE DCEREPORT_INBOUNDORDERS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_CUSTOMER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUNDORDERS_SUPPLIER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUNDORDERS'))  ALTER TABLE DCEREPORT_INBOUNDORDERS DROP CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_SUPPLIER_OID
ALTER TABLE DCEREPORT_INBOUNDORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_SUPPLIER_OID  FOREIGN KEY(SUPPLIER_OID)  REFERENCES DCEREPORT_SUPPLIERS(OID)
ALTER TABLE DCEREPORT_INBOUNDORDERS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_SUPPLIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUNDORDERS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUNDORDERS'))  ALTER TABLE DCEREPORT_INBOUNDORDERS DROP CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_INBOUNDORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_INBOUNDORDERS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUNDORDERS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUNDLINES_INBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUNDLINES'))  ALTER TABLE DCEREPORT_INBOUNDLINES DROP CONSTRAINT FK_DCEREPORT_INBOUNDLINES_INBOUNDORDER_OID
ALTER TABLE DCEREPORT_INBOUNDLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUNDLINES_INBOUNDORDER_OID  FOREIGN KEY(INBOUNDORDER_OID)  REFERENCES DCEREPORT_INBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_INBOUNDLINES NOCHECK CONSTRAINT FK_DCEREPORT_INBOUNDLINES_INBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUNDLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUNDLINES'))  ALTER TABLE DCEREPORT_INBOUNDLINES DROP CONSTRAINT FK_DCEREPORT_INBOUNDLINES_ITEM_OID
ALTER TABLE DCEREPORT_INBOUNDLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUNDLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_INBOUNDLINES NOCHECK CONSTRAINT FK_DCEREPORT_INBOUNDLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDLINE_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDLINE_OID  FOREIGN KEY(INBOUNDLINE_OID)  REFERENCES DCEREPORT_INBOUNDLINES(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDORDER_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDORDER_OID  FOREIGN KEY(INBOUNDORDER_OID)  REFERENCES DCEREPORT_INBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_INBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INBOUND_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_INBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_INBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_INBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_INBOUND_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PRERECEIPT_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PRERECEIPT_ACTUALS'))  ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PRERECEIPT_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PRERECEIPT_ACTUALS'))  ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PRERECEIPT_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PRERECEIPT_ACTUALS'))  ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PRERECEIPT_ACTUALS'))  ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDLINE_OID
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDLINE_OID  FOREIGN KEY(INBOUNDLINE_OID)  REFERENCES DCEREPORT_INBOUNDLINES(OID)
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PRERECEIPT_ACTUALS'))  ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDORDER_OID
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDORDER_OID  FOREIGN KEY(INBOUNDORDER_OID)  REFERENCES DCEREPORT_INBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_INBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PRERECEIPT_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PRERECEIPT_ACTUALS'))  ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PRERECEIPT_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PRERECEIPT_ACTUALS'))  ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_PRERECEIPT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PRERECEIPT_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUTLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUTLINES'))  ALTER TABLE DCEREPORT_PUTLINES DROP CONSTRAINT FK_DCEREPORT_PUTLINES_ITEM_OID
ALTER TABLE DCEREPORT_PUTLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUTLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_PUTLINES NOCHECK CONSTRAINT FK_DCEREPORT_PUTLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUTLINES_PUTORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUTLINES'))  ALTER TABLE DCEREPORT_PUTLINES DROP CONSTRAINT FK_DCEREPORT_PUTLINES_PUTORDER_OID
ALTER TABLE DCEREPORT_PUTLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUTLINES_PUTORDER_OID  FOREIGN KEY(PUTORDER_OID)  REFERENCES DCEREPORT_PUTORDERS(OID)
ALTER TABLE DCEREPORT_PUTLINES NOCHECK CONSTRAINT FK_DCEREPORT_PUTLINES_PUTORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_CONTAINER_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_PUTLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_PUTLINE_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_PUTLINE_OID  FOREIGN KEY(PUTLINE_OID)  REFERENCES DCEREPORT_PUTLINES(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_PUTLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_PUTORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_PUTORDER_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_PUTORDER_OID  FOREIGN KEY(PUTORDER_OID)  REFERENCES DCEREPORT_PUTORDERS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_PUTORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_CONTAINER_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PUT_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PUT_ACTUALS'))  ALTER TABLE DCEREPORT_PUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_PUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PUT_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_CONTAINER_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTLINE_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTLINE_OID  FOREIGN KEY(PUTLINE_OID)  REFERENCES DCEREPORT_PUTLINES(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTORDER_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTORDER_OID  FOREIGN KEY(PUTORDER_OID)  REFERENCES DCEREPORT_PUTORDERS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_PUTORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_CONTAINER_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_CROSSDOCK_ACTUALS'))  ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_CROSSDOCK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_CROSSDOCK_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUNDORDERS_CARRIER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUNDORDERS'))  ALTER TABLE DCEREPORT_OUTBOUNDORDERS DROP CONSTRAINT FK_DCEREPORT_OUTBOUNDORDERS_CARRIER_OID
ALTER TABLE DCEREPORT_OUTBOUNDORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUNDORDERS_CARRIER_OID  FOREIGN KEY(CARRIER_OID)  REFERENCES DCEREPORT_CARRIERS(OID)
ALTER TABLE DCEREPORT_OUTBOUNDORDERS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUNDORDERS_CARRIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUNDORDERS_CUSTOMER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUNDORDERS'))  ALTER TABLE DCEREPORT_OUTBOUNDORDERS DROP CONSTRAINT FK_DCEREPORT_OUTBOUNDORDERS_CUSTOMER_OID
ALTER TABLE DCEREPORT_OUTBOUNDORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUNDORDERS_CUSTOMER_OID  FOREIGN KEY(CUSTOMER_OID)  REFERENCES DCEREPORT_CUSTOMERS(OID)
ALTER TABLE DCEREPORT_OUTBOUNDORDERS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUNDORDERS_CUSTOMER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUNDLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUNDLINES'))  ALTER TABLE DCEREPORT_OUTBOUNDLINES DROP CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_ITEM_OID
ALTER TABLE DCEREPORT_OUTBOUNDLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_OUTBOUNDLINES NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUNDLINES_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUNDLINES'))  ALTER TABLE DCEREPORT_OUTBOUNDLINES DROP CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_LOT_OID
ALTER TABLE DCEREPORT_OUTBOUNDLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_OUTBOUNDLINES NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUNDLINES_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUNDLINES'))  ALTER TABLE DCEREPORT_OUTBOUNDLINES DROP CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_OUTBOUNDLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_OUTBOUNDLINES NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUNDLINES_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDLINE_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDLINE_OID  FOREIGN KEY(OUTBOUNDLINE_OID)  REFERENCES DCEREPORT_OUTBOUNDLINES(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_OUTBOUND_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_OUTBOUND_ACTUALS'))  ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS DROP CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_OUTBOUND_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_OUTBOUND_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICKLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICKLINES'))  ALTER TABLE DCEREPORT_PICKLINES DROP CONSTRAINT FK_DCEREPORT_PICKLINES_ITEM_OID
ALTER TABLE DCEREPORT_PICKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICKLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_PICKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PICKLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICKLINES_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICKLINES'))  ALTER TABLE DCEREPORT_PICKLINES DROP CONSTRAINT FK_DCEREPORT_PICKLINES_LOT_OID
ALTER TABLE DCEREPORT_PICKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICKLINES_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_PICKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PICKLINES_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICKLINES_PICKORDER_OID_ORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICKLINES'))  ALTER TABLE DCEREPORT_PICKLINES DROP CONSTRAINT FK_DCEREPORT_PICKLINES_PICKORDER_OID_ORDER_OID
ALTER TABLE DCEREPORT_PICKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICKLINES_PICKORDER_OID_ORDER_OID  FOREIGN KEY(PICKORDER_OID, ORDER_OID)  REFERENCES DCEREPORT_PICKORDERS(OID, ORDER_OID)
ALTER TABLE DCEREPORT_PICKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PICKLINES_PICKORDER_OID_ORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICKLINES_QCSTATUS_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICKLINES'))  ALTER TABLE DCEREPORT_PICKLINES DROP CONSTRAINT FK_DCEREPORT_PICKLINES_QCSTATUS_OID
ALTER TABLE DCEREPORT_PICKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICKLINES_QCSTATUS_OID  FOREIGN KEY(QCSTATUS_OID)  REFERENCES DCEREPORT_QCSTATUSES(OID)
ALTER TABLE DCEREPORT_PICKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PICKLINES_QCSTATUS_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_CONTAINER_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_CONTAINER_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PICK_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PICK_ACTUALS'))  ALTER TABLE DCEREPORT_PICK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_PICK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PICK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PICK_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_CONTAINER_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_CONTAINER_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TRANSFER_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TRANSFER_ACTUALS'))  ALTER TABLE DCEREPORT_TRANSFER_ACTUALS DROP CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_TRANSFER_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_TRANSFER_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_BACKORDERLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_BACKORDERLINES'))  ALTER TABLE DCEREPORT_BACKORDERLINES DROP CONSTRAINT FK_DCEREPORT_BACKORDERLINES_ITEM_OID
ALTER TABLE DCEREPORT_BACKORDERLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_BACKORDERLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_BACKORDERLINES NOCHECK CONSTRAINT FK_DCEREPORT_BACKORDERLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_BACKORDERLINES_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_BACKORDERLINES'))  ALTER TABLE DCEREPORT_BACKORDERLINES DROP CONSTRAINT FK_DCEREPORT_BACKORDERLINES_LOT_OID
ALTER TABLE DCEREPORT_BACKORDERLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_BACKORDERLINES_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_BACKORDERLINES NOCHECK CONSTRAINT FK_DCEREPORT_BACKORDERLINES_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_BACKORDERLINES_QCSTATUS_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_BACKORDERLINES'))  ALTER TABLE DCEREPORT_BACKORDERLINES DROP CONSTRAINT FK_DCEREPORT_BACKORDERLINES_QCSTATUS_OID
ALTER TABLE DCEREPORT_BACKORDERLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_BACKORDERLINES_QCSTATUS_OID  FOREIGN KEY(QCSTATUS_OID)  REFERENCES DCEREPORT_QCSTATUSES(OID)
ALTER TABLE DCEREPORT_BACKORDERLINES NOCHECK CONSTRAINT FK_DCEREPORT_BACKORDERLINES_QCSTATUS_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACKORDERS_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACKORDERS'))  ALTER TABLE DCEREPORT_PACKORDERS DROP CONSTRAINT FK_DCEREPORT_PACKORDERS_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_PACKORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACKORDERS_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_PACKORDERS NOCHECK CONSTRAINT FK_DCEREPORT_PACKORDERS_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACKORDERS_PROCESSRESOURCE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACKORDERS'))  ALTER TABLE DCEREPORT_PACKORDERS DROP CONSTRAINT FK_DCEREPORT_PACKORDERS_PROCESSRESOURCE_OID
ALTER TABLE DCEREPORT_PACKORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACKORDERS_PROCESSRESOURCE_OID  FOREIGN KEY(PROCESSRESOURCE_OID)  REFERENCES DCEREPORT_PROCESSRESOURCES(OID)
ALTER TABLE DCEREPORT_PACKORDERS NOCHECK CONSTRAINT FK_DCEREPORT_PACKORDERS_PROCESSRESOURCE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACKLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACKLINES'))  ALTER TABLE DCEREPORT_PACKLINES DROP CONSTRAINT FK_DCEREPORT_PACKLINES_ITEM_OID
ALTER TABLE DCEREPORT_PACKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACKLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_PACKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PACKLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACKLINES_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACKLINES'))  ALTER TABLE DCEREPORT_PACKLINES DROP CONSTRAINT FK_DCEREPORT_PACKLINES_LOT_OID
ALTER TABLE DCEREPORT_PACKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACKLINES_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_PACKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PACKLINES_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACKLINES_OUTBOUNDLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACKLINES'))  ALTER TABLE DCEREPORT_PACKLINES DROP CONSTRAINT FK_DCEREPORT_PACKLINES_OUTBOUNDLINE_OID
ALTER TABLE DCEREPORT_PACKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACKLINES_OUTBOUNDLINE_OID  FOREIGN KEY(OUTBOUNDLINE_OID)  REFERENCES DCEREPORT_OUTBOUNDLINES(OID)
ALTER TABLE DCEREPORT_PACKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PACKLINES_OUTBOUNDLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACKLINES_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACKLINES'))  ALTER TABLE DCEREPORT_PACKLINES DROP CONSTRAINT FK_DCEREPORT_PACKLINES_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_PACKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACKLINES_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_PACKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PACKLINES_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACKLINES_PACKORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACKLINES'))  ALTER TABLE DCEREPORT_PACKLINES DROP CONSTRAINT FK_DCEREPORT_PACKLINES_PACKORDER_OID
ALTER TABLE DCEREPORT_PACKLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACKLINES_PACKORDER_OID  FOREIGN KEY(PACKORDER_OID)  REFERENCES DCEREPORT_PACKORDERS(OID)
ALTER TABLE DCEREPORT_PACKLINES NOCHECK CONSTRAINT FK_DCEREPORT_PACKLINES_PACKORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_CONTAINER_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_PACKLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_PACKLINE_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_PACKLINE_OID  FOREIGN KEY(PACKLINE_OID)  REFERENCES DCEREPORT_PACKLINES(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_PACKLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_PACKORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_PACKORDER_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_PACKORDER_OID  FOREIGN KEY(PACKORDER_OID)  REFERENCES DCEREPORT_PACKORDERS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_PACKORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_CONTAINER_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_PACK_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_PACK_ACTUALS'))  ALTER TABLE DCEREPORT_PACK_ACTUALS DROP CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_PACK_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_PACK_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_PACK_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_DELIVERYORDERS_CARRIER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_DELIVERYORDERS'))  ALTER TABLE DCEREPORT_DELIVERYORDERS DROP CONSTRAINT FK_DCEREPORT_DELIVERYORDERS_CARRIER_OID
ALTER TABLE DCEREPORT_DELIVERYORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_DELIVERYORDERS_CARRIER_OID  FOREIGN KEY(CARRIER_OID)  REFERENCES DCEREPORT_CARRIERS(OID)
ALTER TABLE DCEREPORT_DELIVERYORDERS NOCHECK CONSTRAINT FK_DCEREPORT_DELIVERYORDERS_CARRIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIPORDERS_CARRIER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIPORDERS'))  ALTER TABLE DCEREPORT_SHIPORDERS DROP CONSTRAINT FK_DCEREPORT_SHIPORDERS_CARRIER_OID
ALTER TABLE DCEREPORT_SHIPORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIPORDERS_CARRIER_OID  FOREIGN KEY(CARRIER_OID)  REFERENCES DCEREPORT_CARRIERS(OID)
ALTER TABLE DCEREPORT_SHIPORDERS NOCHECK CONSTRAINT FK_DCEREPORT_SHIPORDERS_CARRIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIPORDERS_DELIVERYORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIPORDERS'))  ALTER TABLE DCEREPORT_SHIPORDERS DROP CONSTRAINT FK_DCEREPORT_SHIPORDERS_DELIVERYORDER_OID
ALTER TABLE DCEREPORT_SHIPORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIPORDERS_DELIVERYORDER_OID  FOREIGN KEY(DELIVERYORDER_OID)  REFERENCES DCEREPORT_DELIVERYORDERS(OID)
ALTER TABLE DCEREPORT_SHIPORDERS NOCHECK CONSTRAINT FK_DCEREPORT_SHIPORDERS_DELIVERYORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIPORDERS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIPORDERS'))  ALTER TABLE DCEREPORT_SHIPORDERS DROP CONSTRAINT FK_DCEREPORT_SHIPORDERS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_SHIPORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIPORDERS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_SHIPORDERS NOCHECK CONSTRAINT FK_DCEREPORT_SHIPORDERS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIPLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIPLINES'))  ALTER TABLE DCEREPORT_SHIPLINES DROP CONSTRAINT FK_DCEREPORT_SHIPLINES_ITEM_OID
ALTER TABLE DCEREPORT_SHIPLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIPLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_SHIPLINES NOCHECK CONSTRAINT FK_DCEREPORT_SHIPLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIPLINES_OUTBOUNDLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIPLINES'))  ALTER TABLE DCEREPORT_SHIPLINES DROP CONSTRAINT FK_DCEREPORT_SHIPLINES_OUTBOUNDLINE_OID
ALTER TABLE DCEREPORT_SHIPLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIPLINES_OUTBOUNDLINE_OID  FOREIGN KEY(OUTBOUNDLINE_OID)  REFERENCES DCEREPORT_OUTBOUNDLINES(OID)
ALTER TABLE DCEREPORT_SHIPLINES NOCHECK CONSTRAINT FK_DCEREPORT_SHIPLINES_OUTBOUNDLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIPLINES_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIPLINES'))  ALTER TABLE DCEREPORT_SHIPLINES DROP CONSTRAINT FK_DCEREPORT_SHIPLINES_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_SHIPLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIPLINES_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_SHIPLINES NOCHECK CONSTRAINT FK_DCEREPORT_SHIPLINES_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIPLINES_SHIPORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIPLINES'))  ALTER TABLE DCEREPORT_SHIPLINES DROP CONSTRAINT FK_DCEREPORT_SHIPLINES_SHIPORDER_OID
ALTER TABLE DCEREPORT_SHIPLINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIPLINES_SHIPORDER_OID  FOREIGN KEY(SHIPORDER_OID)  REFERENCES DCEREPORT_SHIPORDERS(OID)
ALTER TABLE DCEREPORT_SHIPLINES NOCHECK CONSTRAINT FK_DCEREPORT_SHIPLINES_SHIPORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDLINE_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDLINE_OID  FOREIGN KEY(OUTBOUNDLINE_OID)  REFERENCES DCEREPORT_OUTBOUNDLINES(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_SHIPLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_SHIPLINE_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_SHIPLINE_OID  FOREIGN KEY(SHIPLINE_OID)  REFERENCES DCEREPORT_SHIPLINES(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_SHIPLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_SHIPORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_SHIPORDER_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_SHIPORDER_OID  FOREIGN KEY(SHIPORDER_OID)  REFERENCES DCEREPORT_SHIPORDERS(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_SHIPORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_SHIP_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_SHIP_ACTUALS'))  ALTER TABLE DCEREPORT_SHIP_ACTUALS DROP CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_SHIP_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_SHIP_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_SHIP_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_CONTAINER_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_CONTAINER_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_REPLENISH_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_REPLENISH_ACTUALS'))  ALTER TABLE DCEREPORT_REPLENISH_ACTUALS DROP CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_REPLENISH_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_REPLENISH_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_CONTAINER_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_DEVICE_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_ITEM_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_LOT_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_REASON_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_REASON_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_REASON_OID  FOREIGN KEY(REASON_OID)  REFERENCES DCEREPORT_TASKREASONS(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_REASON_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_TASKS_WORKZONE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_TASKS'))  ALTER TABLE DCEREPORT_TASKS DROP CONSTRAINT FK_DCEREPORT_TASKS_WORKZONE_OID
ALTER TABLE DCEREPORT_TASKS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_TASKS_WORKZONE_OID  FOREIGN KEY(WORKZONE_OID)  REFERENCES DCEREPORT_WORKZONES(OID)
ALTER TABLE DCEREPORT_TASKS NOCHECK CONSTRAINT FK_DCEREPORT_TASKS_WORKZONE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_LOCATIONS_WAREHOUSE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_LOCATIONS'))  ALTER TABLE DCEREPORT_LOCATIONS DROP CONSTRAINT FK_DCEREPORT_LOCATIONS_WAREHOUSE_OID
ALTER TABLE DCEREPORT_LOCATIONS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_LOCATIONS_WAREHOUSE_OID  FOREIGN KEY(WAREHOUSE_OID)  REFERENCES DCEREPORT_WAREHOUSES(OID)
ALTER TABLE DCEREPORT_LOCATIONS NOCHECK CONSTRAINT FK_DCEREPORT_LOCATIONS_WAREHOUSE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_CONTAINER_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_CONTAINER_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MOVE_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MOVE_ACTUALS'))  ALTER TABLE DCEREPORT_MOVE_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_MOVE_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MOVE_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MOVE_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_FROM_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_NEST_ACTUALS_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_NEST_ACTUALS'))  ALTER TABLE DCEREPORT_NEST_ACTUALS DROP CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_TO_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_NEST_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_NEST_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_NEST_ACTUALS_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_CONTAINER_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_DEVICE_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_FROM_LOCATION_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_ITEM_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_LOT_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_NEST_CONTAINER_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_NEST_CONTAINER_OID  FOREIGN KEY(NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_INVENTORY_ADJUSTS_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_INVENTORY_ADJUSTS'))  ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS DROP CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_TO_LOCATION_OID
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_INVENTORY_ADJUSTS NOCHECK CONSTRAINT FK_DCEREPORT_INVENTORY_ADJUSTS_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_ASSETTRACES_CARRIER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_ASSETTRACES'))  ALTER TABLE DCEREPORT_ASSETTRACES DROP CONSTRAINT FK_DCEREPORT_ASSETTRACES_CARRIER_OID
ALTER TABLE DCEREPORT_ASSETTRACES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_ASSETTRACES_CARRIER_OID  FOREIGN KEY(CARRIER_OID)  REFERENCES DCEREPORT_CARRIERS(OID)
ALTER TABLE DCEREPORT_ASSETTRACES NOCHECK CONSTRAINT FK_DCEREPORT_ASSETTRACES_CARRIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_ASSETTRACES_CONTAINER_TYPE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_ASSETTRACES'))  ALTER TABLE DCEREPORT_ASSETTRACES DROP CONSTRAINT FK_DCEREPORT_ASSETTRACES_CONTAINER_TYPE_OID
ALTER TABLE DCEREPORT_ASSETTRACES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_ASSETTRACES_CONTAINER_TYPE_OID  FOREIGN KEY(CONTAINER_TYPE_OID)  REFERENCES DCEREPORT_CONTAINER_TYPES(OID)
ALTER TABLE DCEREPORT_ASSETTRACES NOCHECK CONSTRAINT FK_DCEREPORT_ASSETTRACES_CONTAINER_TYPE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_ASSETTRACES_CUSTOMER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_ASSETTRACES'))  ALTER TABLE DCEREPORT_ASSETTRACES DROP CONSTRAINT FK_DCEREPORT_ASSETTRACES_CUSTOMER_OID
ALTER TABLE DCEREPORT_ASSETTRACES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_ASSETTRACES_CUSTOMER_OID  FOREIGN KEY(CUSTOMER_OID)  REFERENCES DCEREPORT_CUSTOMERS(OID)
ALTER TABLE DCEREPORT_ASSETTRACES NOCHECK CONSTRAINT FK_DCEREPORT_ASSETTRACES_CUSTOMER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_ASSETTRACES_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_ASSETTRACES'))  ALTER TABLE DCEREPORT_ASSETTRACES DROP CONSTRAINT FK_DCEREPORT_ASSETTRACES_EMPLOYEE_OID
ALTER TABLE DCEREPORT_ASSETTRACES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_ASSETTRACES_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_ASSETTRACES NOCHECK CONSTRAINT FK_DCEREPORT_ASSETTRACES_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_ASSETTRACES_INBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_ASSETTRACES'))  ALTER TABLE DCEREPORT_ASSETTRACES DROP CONSTRAINT FK_DCEREPORT_ASSETTRACES_INBOUNDORDER_OID
ALTER TABLE DCEREPORT_ASSETTRACES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_ASSETTRACES_INBOUNDORDER_OID  FOREIGN KEY(INBOUNDORDER_OID)  REFERENCES DCEREPORT_INBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_ASSETTRACES NOCHECK CONSTRAINT FK_DCEREPORT_ASSETTRACES_INBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_ASSETTRACES_SHIPORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_ASSETTRACES'))  ALTER TABLE DCEREPORT_ASSETTRACES DROP CONSTRAINT FK_DCEREPORT_ASSETTRACES_SHIPORDER_OID
ALTER TABLE DCEREPORT_ASSETTRACES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_ASSETTRACES_SHIPORDER_OID  FOREIGN KEY(SHIPORDER_OID)  REFERENCES DCEREPORT_SHIPORDERS(OID)
ALTER TABLE DCEREPORT_ASSETTRACES NOCHECK CONSTRAINT FK_DCEREPORT_ASSETTRACES_SHIPORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_ASSETTRACES_SUPPLIER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_ASSETTRACES'))  ALTER TABLE DCEREPORT_ASSETTRACES DROP CONSTRAINT FK_DCEREPORT_ASSETTRACES_SUPPLIER_OID
ALTER TABLE DCEREPORT_ASSETTRACES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_ASSETTRACES_SUPPLIER_OID  FOREIGN KEY(SUPPLIER_OID)  REFERENCES DCEREPORT_SUPPLIERS(OID)
ALTER TABLE DCEREPORT_ASSETTRACES NOCHECK CONSTRAINT FK_DCEREPORT_ASSETTRACES_SUPPLIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_ORDERS_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_ORDERS'))  ALTER TABLE DCEREPORT_MTO_ORDERS DROP CONSTRAINT FK_DCEREPORT_MTO_ORDERS_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_MTO_ORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_ORDERS_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_MTO_ORDERS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_ORDERS_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_ORDERS_PROCESSRESOURCE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_ORDERS'))  ALTER TABLE DCEREPORT_MTO_ORDERS DROP CONSTRAINT FK_DCEREPORT_MTO_ORDERS_PROCESSRESOURCE_OID
ALTER TABLE DCEREPORT_MTO_ORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_ORDERS_PROCESSRESOURCE_OID  FOREIGN KEY(PROCESSRESOURCE_OID)  REFERENCES DCEREPORT_PROCESSRESOURCES(OID)
ALTER TABLE DCEREPORT_MTO_ORDERS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_ORDERS_PROCESSRESOURCE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_ORDERS_PROCESSRESOURCE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_ORDERS'))  ALTER TABLE DCEREPORT_MTS_ORDERS DROP CONSTRAINT FK_DCEREPORT_MTS_ORDERS_PROCESSRESOURCE_OID
ALTER TABLE DCEREPORT_MTS_ORDERS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_ORDERS_PROCESSRESOURCE_OID  FOREIGN KEY(PROCESSRESOURCE_OID)  REFERENCES DCEREPORT_PROCESSRESOURCES(OID)
ALTER TABLE DCEREPORT_MTS_ORDERS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_ORDERS_PROCESSRESOURCE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_LINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_LINES'))  ALTER TABLE DCEREPORT_MTO_LINES DROP CONSTRAINT FK_DCEREPORT_MTO_LINES_ITEM_OID
ALTER TABLE DCEREPORT_MTO_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_LINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_MTO_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTO_LINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_LINES_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_LINES'))  ALTER TABLE DCEREPORT_MTO_LINES DROP CONSTRAINT FK_DCEREPORT_MTO_LINES_LOT_OID
ALTER TABLE DCEREPORT_MTO_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_LINES_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_MTO_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTO_LINES_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_LINES_MTO_ORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_LINES'))  ALTER TABLE DCEREPORT_MTO_LINES DROP CONSTRAINT FK_DCEREPORT_MTO_LINES_MTO_ORDER_OID
ALTER TABLE DCEREPORT_MTO_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_LINES_MTO_ORDER_OID  FOREIGN KEY(MTO_ORDER_OID)  REFERENCES DCEREPORT_MTO_ORDERS(OID)
ALTER TABLE DCEREPORT_MTO_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTO_LINES_MTO_ORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_LINES_OUTBOUNDLINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_LINES'))  ALTER TABLE DCEREPORT_MTO_LINES DROP CONSTRAINT FK_DCEREPORT_MTO_LINES_OUTBOUNDLINE_OID
ALTER TABLE DCEREPORT_MTO_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_LINES_OUTBOUNDLINE_OID  FOREIGN KEY(OUTBOUNDLINE_OID)  REFERENCES DCEREPORT_OUTBOUNDLINES(OID)
ALTER TABLE DCEREPORT_MTO_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTO_LINES_OUTBOUNDLINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_LINES_OUTBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_LINES'))  ALTER TABLE DCEREPORT_MTO_LINES DROP CONSTRAINT FK_DCEREPORT_MTO_LINES_OUTBOUNDORDER_OID
ALTER TABLE DCEREPORT_MTO_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_LINES_OUTBOUNDORDER_OID  FOREIGN KEY(OUTBOUNDORDER_OID)  REFERENCES DCEREPORT_OUTBOUNDORDERS(OID)
ALTER TABLE DCEREPORT_MTO_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTO_LINES_OUTBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_LINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_LINES'))  ALTER TABLE DCEREPORT_MTS_LINES DROP CONSTRAINT FK_DCEREPORT_MTS_LINES_ITEM_OID
ALTER TABLE DCEREPORT_MTS_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_LINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_MTS_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTS_LINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_LINES_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_LINES'))  ALTER TABLE DCEREPORT_MTS_LINES DROP CONSTRAINT FK_DCEREPORT_MTS_LINES_LOT_OID
ALTER TABLE DCEREPORT_MTS_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_LINES_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_MTS_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTS_LINES_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_LINES_MTS_ORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_LINES'))  ALTER TABLE DCEREPORT_MTS_LINES DROP CONSTRAINT FK_DCEREPORT_MTS_LINES_MTS_ORDER_OID
ALTER TABLE DCEREPORT_MTS_LINES WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_LINES_MTS_ORDER_OID  FOREIGN KEY(MTS_ORDER_OID)  REFERENCES DCEREPORT_MTS_ORDERS(OID)
ALTER TABLE DCEREPORT_MTS_LINES NOCHECK CONSTRAINT FK_DCEREPORT_MTS_LINES_MTS_ORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_LOCATION_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_LOCATION_OID  FOREIGN KEY(LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_LINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_LINE_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_LINE_OID  FOREIGN KEY(MTO_LINE_OID)  REFERENCES DCEREPORT_MTO_LINES(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_LINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_ORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_ORDER_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_ORDER_OID  FOREIGN KEY(MTO_ORDER_OID)  REFERENCES DCEREPORT_MTO_ORDERS(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_MTO_ORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_INPUT_ACTUALS_PROCESSRESOURCE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_PROCESSRESOURCE_OID
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_PROCESSRESOURCE_OID  FOREIGN KEY(PROCESSRESOURCE_OID)  REFERENCES DCEREPORT_PROCESSRESOURCES(OID)
ALTER TABLE DCEREPORT_MTO_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_INPUT_ACTUALS_PROCESSRESOURCE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_LOCATION_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_LOCATION_OID  FOREIGN KEY(LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_LINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_LINE_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_LINE_OID  FOREIGN KEY(MTS_LINE_OID)  REFERENCES DCEREPORT_MTS_LINES(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_LINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_ORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_ORDER_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_ORDER_OID  FOREIGN KEY(MTS_ORDER_OID)  REFERENCES DCEREPORT_MTS_ORDERS(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_MTS_ORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_INPUT_ACTUALS_PROCESSRESOURCE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_INPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_PROCESSRESOURCE_OID
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_PROCESSRESOURCE_OID  FOREIGN KEY(PROCESSRESOURCE_OID)  REFERENCES DCEREPORT_PROCESSRESOURCES(OID)
ALTER TABLE DCEREPORT_MTS_INPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_INPUT_ACTUALS_PROCESSRESOURCE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOCATION_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOCATION_OID  FOREIGN KEY(LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_LINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_LINE_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_LINE_OID  FOREIGN KEY(MTO_LINE_OID)  REFERENCES DCEREPORT_MTO_LINES(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_LINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_ORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_ORDER_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_ORDER_OID  FOREIGN KEY(MTO_ORDER_OID)  REFERENCES DCEREPORT_MTO_ORDERS(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_MTO_ORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTO_OUTPUT_ACTUALS_PROCESSRESOURCE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTO_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_PROCESSRESOURCE_OID
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_PROCESSRESOURCE_OID  FOREIGN KEY(PROCESSRESOURCE_OID)  REFERENCES DCEREPORT_PROCESSRESOURCES(OID)
ALTER TABLE DCEREPORT_MTO_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTO_OUTPUT_ACTUALS_PROCESSRESOURCE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_CONTAINER_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_DEVICE_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_EMPLOYEE_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_ITEM_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOCATION_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOCATION_OID  FOREIGN KEY(LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOT_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_LINE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_LINE_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_LINE_OID  FOREIGN KEY(MTS_LINE_OID)  REFERENCES DCEREPORT_MTS_LINES(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_LINE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_ORDER_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_ORDER_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_ORDER_OID  FOREIGN KEY(MTS_ORDER_OID)  REFERENCES DCEREPORT_MTS_ORDERS(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_MTS_ORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_DCEREPORT_MTS_OUTPUT_ACTUALS_PROCESSRESOURCE_OID') AND parent_object_id = OBJECT_ID(N'DCEREPORT_MTS_OUTPUT_ACTUALS'))  ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS DROP CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_PROCESSRESOURCE_OID
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS WITH NOCHECK  ADD CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_PROCESSRESOURCE_OID  FOREIGN KEY(PROCESSRESOURCE_OID)  REFERENCES DCEREPORT_PROCESSRESOURCES(OID)
ALTER TABLE DCEREPORT_MTS_OUTPUT_ACTUALS NOCHECK CONSTRAINT FK_DCEREPORT_MTS_OUTPUT_ACTUALS_PROCESSRESOURCE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_CARRIER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_CARRIER_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_CARRIER_OID  FOREIGN KEY(CARRIER_OID)  REFERENCES DCEREPORT_CARRIERS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_CARRIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_CONTAINER_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_CUSTOMER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_CUSTOMER_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_CUSTOMER_OID  FOREIGN KEY(CUSTOMER_OID)  REFERENCES DCEREPORT_CUSTOMERS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_CUSTOMER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_EMPLOYEE_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_INBOUNDORDER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_INBOUNDORDER_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_INBOUNDORDER_OID  FOREIGN KEY(INBOUNDORDER_OID)  REFERENCES DCEREPORT_INBOUNDORDERS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_INBOUNDORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_ITEM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_ITEM_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_LOT_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_LOT_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_MACHINEOPERATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_MACHINEOPERATION_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_MACHINEOPERATION_OID  FOREIGN KEY(MACHINEOPERATION_OID)  REFERENCES DCEREPORT_MACHINEOPERATIONS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_MACHINEOPERATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_PRODUCTIONOPERATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_PRODUCTIONOPERATION_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_PRODUCTIONOPERATION_OID  FOREIGN KEY(PRODUCTIONOPERATION_OID)  REFERENCES DCEREPORT_PRODUCTIONOPERATIONS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_PRODUCTIONOPERATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_PRODUCTIONORDER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_PRODUCTIONORDER_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_PRODUCTIONORDER_OID  FOREIGN KEY(PRODUCTIONORDER_OID)  REFERENCES DCEREPORT_PRODUCTIONORDERS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_PRODUCTIONORDER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_QUALITYCONTROLSTATUS_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_QUALITYCONTROLSTATUS_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_QUALITYCONTROLSTATUS_OID  FOREIGN KEY(QUALITYCONTROLSTATUS_OID)  REFERENCES DCEREPORT_QCSTATUSES(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_QUALITYCONTROLSTATUS_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPECTION_SUPPLIER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPECTION'))  ALTER TABLE OBJTREP_INSPECTION DROP CONSTRAINT FK_OBJTREP_INSPECTION_SUPPLIER_OID
ALTER TABLE OBJTREP_INSPECTION WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPECTION_SUPPLIER_OID  FOREIGN KEY(SUPPLIER_OID)  REFERENCES DCEREPORT_SUPPLIERS(OID)
ALTER TABLE OBJTREP_INSPECTION NOCHECK CONSTRAINT FK_OBJTREP_INSPECTION_SUPPLIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_CHECKINSTR_INSPECTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_CHECKINSTR'))  ALTER TABLE OBJTREP_INSPEC_CHECKINSTR DROP CONSTRAINT FK_OBJTREP_INSPEC_CHECKINSTR_INSPECTION_OID
ALTER TABLE OBJTREP_INSPEC_CHECKINSTR WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_CHECKINSTR_INSPECTION_OID  FOREIGN KEY(INSPECTION_OID)  REFERENCES OBJTREP_INSPECTION(OID)
ALTER TABLE OBJTREP_INSPEC_CHECKINSTR NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_CHECKINSTR_INSPECTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INPUTINSTR_INSPECTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INPUTINSTR'))  ALTER TABLE OBJTREP_INSPEC_INPUTINSTR DROP CONSTRAINT FK_OBJTREP_INSPEC_INPUTINSTR_INSPECTION_OID
ALTER TABLE OBJTREP_INSPEC_INPUTINSTR WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INPUTINSTR_INSPECTION_OID  FOREIGN KEY(INSPECTION_OID)  REFERENCES OBJTREP_INSPECTION(OID)
ALTER TABLE OBJTREP_INSPEC_INPUTINSTR NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INPUTINSTR_INSPECTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INPUTINSTR_UOM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INPUTINSTR'))  ALTER TABLE OBJTREP_INSPEC_INPUTINSTR DROP CONSTRAINT FK_OBJTREP_INSPEC_INPUTINSTR_UOM_OID
ALTER TABLE OBJTREP_INSPEC_INPUTINSTR WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INPUTINSTR_UOM_OID  FOREIGN KEY(UOM_OID)  REFERENCES DCEREPORT_UOMS(OID)
ALTER TABLE OBJTREP_INSPEC_INPUTINSTR NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INPUTINSTR_UOM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEININSTR_INSPECTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEININSTR'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEININSTR DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEININSTR_INSPECTION_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEININSTR WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEININSTR_INSPECTION_OID  FOREIGN KEY(INSPECTION_OID)  REFERENCES OBJTREP_INSPECTION(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEININSTR NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEININSTR_INSPECTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INSPECTIONEVENT_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INSPECTIONEVENT'))  ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_DEVICE_OID
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INSPECTIONEVENT_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INSPECTIONEVENT'))  ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_EMPLOYEE_OID
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSPECTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INSPECTIONEVENT'))  ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSPECTION_OID
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSPECTION_OID  FOREIGN KEY(INSPECTION_OID)  REFERENCES OBJTREP_INSPECTION(OID)
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSPECTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSTRUCTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INSPECTIONEVENT'))  ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSTRUCTION_OID
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSTRUCTION_OID  FOREIGN KEY(INSTRUCTION_OID)  REFERENCES OBJTREP_INSPECTIONINSTR(OID)
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_INSTRUCTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INSPECTIONEVENT_RESULT_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INSPECTIONEVENT'))  ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_RESULT_OID
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_RESULT_OID  FOREIGN KEY(RESULT_OID)  REFERENCES OBJTREP_INSPEC_INSPRESULT(OID)
ALTER TABLE OBJTREP_INSPEC_INSPECTIONEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INSPECTIONEVENT_RESULT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_DEVICE_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_EMPLOYEE_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_FROM_CONTAINER_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTION_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTION_OID  FOREIGN KEY(INSPECTION_OID)  REFERENCES OBJTREP_INSPECTION(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTIONEVENT_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTIONEVENT_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTIONEVENT_OID  FOREIGN KEY(INSPECTIONEVENT_OID)  REFERENCES OBJTREP_INSPEC_INSPECTIONEVENT(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSPECTIONEVENT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_INSTRUCTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSTRUCTION_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSTRUCTION_OID  FOREIGN KEY(INSTRUCTION_OID)  REFERENCES OBJTREP_INSPECTIONINSTR(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_INSTRUCTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_SAMPLE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_SAMPLE_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_SAMPLE_OID  FOREIGN KEY(SAMPLE_OID)  REFERENCES OBJTREP_SAMPLES(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_SAMPLE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_SOURCELOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_SOURCELOCATION_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_SOURCELOCATION_OID  FOREIGN KEY(SOURCELOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_SOURCELOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_SAMPLEEVENT_TARGETLOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_SAMPLEEVENT'))  ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT DROP CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_TARGETLOCATION_OID
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_TARGETLOCATION_OID  FOREIGN KEY(TARGETLOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_INSPEC_SAMPLEEVENT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_SAMPLEEVENT_TARGETLOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_INSPRESULT_INSTRUCTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_INSPRESULT'))  ALTER TABLE OBJTREP_INSPEC_INSPRESULT DROP CONSTRAINT FK_OBJTREP_INSPEC_INSPRESULT_INSTRUCTION_OID
ALTER TABLE OBJTREP_INSPEC_INSPRESULT WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_INSPRESULT_INSTRUCTION_OID  FOREIGN KEY(INSTRUCTION_OID)  REFERENCES OBJTREP_INSPECTIONINSTR(OID)
ALTER TABLE OBJTREP_INSPEC_INSPRESULT NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_INSPRESULT_INSTRUCTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SAMPLES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SAMPLES'))  ALTER TABLE OBJTREP_SAMPLES DROP CONSTRAINT FK_OBJTREP_SAMPLES_ITEM_OID
ALTER TABLE OBJTREP_SAMPLES WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SAMPLES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE OBJTREP_SAMPLES NOCHECK CONSTRAINT FK_OBJTREP_SAMPLES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SAMPLES_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SAMPLES'))  ALTER TABLE OBJTREP_SAMPLES DROP CONSTRAINT FK_OBJTREP_SAMPLES_LOCATION_OID
ALTER TABLE OBJTREP_SAMPLES WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SAMPLES_LOCATION_OID  FOREIGN KEY(LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_SAMPLES NOCHECK CONSTRAINT FK_OBJTREP_SAMPLES_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SAMPLES_LOT_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SAMPLES'))  ALTER TABLE OBJTREP_SAMPLES DROP CONSTRAINT FK_OBJTREP_SAMPLES_LOT_OID
ALTER TABLE OBJTREP_SAMPLES WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SAMPLES_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE OBJTREP_SAMPLES NOCHECK CONSTRAINT FK_OBJTREP_SAMPLES_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SAMPLES_SAMPLEINSTR_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SAMPLES'))  ALTER TABLE OBJTREP_SAMPLES DROP CONSTRAINT FK_OBJTREP_SAMPLES_SAMPLEINSTR_OID
ALTER TABLE OBJTREP_SAMPLES WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SAMPLES_SAMPLEINSTR_OID  FOREIGN KEY(SAMPLEINSTR_OID)  REFERENCES OBJTREP_INSPEC_SAMPLEININSTR(OID)
ALTER TABLE OBJTREP_SAMPLES NOCHECK CONSTRAINT FK_OBJTREP_SAMPLES_SAMPLEINSTR_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_MEASUREMNTINSTR_INSPECTION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_MEASUREMNTINSTR'))  ALTER TABLE OBJTREP_INSPEC_MEASUREMNTINSTR DROP CONSTRAINT FK_OBJTREP_INSPEC_MEASUREMNTINSTR_INSPECTION_OID
ALTER TABLE OBJTREP_INSPEC_MEASUREMNTINSTR WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_MEASUREMNTINSTR_INSPECTION_OID  FOREIGN KEY(INSPECTION_OID)  REFERENCES OBJTREP_INSPECTION(OID)
ALTER TABLE OBJTREP_INSPEC_MEASUREMNTINSTR NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_MEASUREMNTINSTR_INSPECTION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INSPEC_MEASUREMNTINSTR_UOM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INSPEC_MEASUREMNTINSTR'))  ALTER TABLE OBJTREP_INSPEC_MEASUREMNTINSTR DROP CONSTRAINT FK_OBJTREP_INSPEC_MEASUREMNTINSTR_UOM_OID
ALTER TABLE OBJTREP_INSPEC_MEASUREMNTINSTR WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INSPEC_MEASUREMNTINSTR_UOM_OID  FOREIGN KEY(UOM_OID)  REFERENCES DCEREPORT_UOMS(OID)
ALTER TABLE OBJTREP_INSPEC_MEASUREMNTINSTR NOCHECK CONSTRAINT FK_OBJTREP_INSPEC_MEASUREMNTINSTR_UOM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALS_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALS'))  ALTER TABLE OBJTREP_SERIALS DROP CONSTRAINT FK_OBJTREP_SERIALS_CONTAINER_OID
ALTER TABLE OBJTREP_SERIALS WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALS_CONTAINER_OID  FOREIGN KEY(CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_SERIALS NOCHECK CONSTRAINT FK_OBJTREP_SERIALS_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALS_ITEM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALS'))  ALTER TABLE OBJTREP_SERIALS DROP CONSTRAINT FK_OBJTREP_SERIALS_ITEM_OID
ALTER TABLE OBJTREP_SERIALS WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALS_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE OBJTREP_SERIALS NOCHECK CONSTRAINT FK_OBJTREP_SERIALS_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALS_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALS'))  ALTER TABLE OBJTREP_SERIALS DROP CONSTRAINT FK_OBJTREP_SERIALS_LOCATION_OID
ALTER TABLE OBJTREP_SERIALS WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALS_LOCATION_OID  FOREIGN KEY(LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_SERIALS NOCHECK CONSTRAINT FK_OBJTREP_SERIALS_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALS_LOT_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALS'))  ALTER TABLE OBJTREP_SERIALS DROP CONSTRAINT FK_OBJTREP_SERIALS_LOT_OID
ALTER TABLE OBJTREP_SERIALS WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALS_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE OBJTREP_SERIALS NOCHECK CONSTRAINT FK_OBJTREP_SERIALS_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALS_QCSTATUS_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALS'))  ALTER TABLE OBJTREP_SERIALS DROP CONSTRAINT FK_OBJTREP_SERIALS_QCSTATUS_OID
ALTER TABLE OBJTREP_SERIALS WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALS_QCSTATUS_OID  FOREIGN KEY(QCSTATUS_OID)  REFERENCES DCEREPORT_QCSTATUSES(OID)
ALTER TABLE OBJTREP_SERIALS NOCHECK CONSTRAINT FK_OBJTREP_SERIALS_QCSTATUS_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALS_WAREHOUSE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALS'))  ALTER TABLE OBJTREP_SERIALS DROP CONSTRAINT FK_OBJTREP_SERIALS_WAREHOUSE_OID
ALTER TABLE OBJTREP_SERIALS WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALS_WAREHOUSE_OID  FOREIGN KEY(WAREHOUSE_OID)  REFERENCES DCEREPORT_WAREHOUSES(OID)
ALTER TABLE OBJTREP_SERIALS NOCHECK CONSTRAINT FK_OBJTREP_SERIALS_WAREHOUSE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_DEVICE_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_EMPLOYEE_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_CONTAINER_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_LOCATION_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_NEST_CONTAINER_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_ITEM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_ITEM_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_LOT_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_LOT_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_CONTAINER_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_LOCATION_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_INVENTORYTRACE_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_INVENTORYTRACE'))  ALTER TABLE OBJTREP_INVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_NEST_CONTAINER_OID
ALTER TABLE OBJTREP_INVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_INVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_INVENTORYTRACE_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_DEVICE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_DEVICE_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_DEVICE_OID  FOREIGN KEY(DEVICE_OID)  REFERENCES DCEREPORT_DEVICES(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_DEVICE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_EMPLOYEE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_EMPLOYEE_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_EMPLOYEE_OID  FOREIGN KEY(EMPLOYEE_OID)  REFERENCES DCEREPORT_EMPLOYEES(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_EMPLOYEE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_FROM_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_CONTAINER_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_CONTAINER_OID  FOREIGN KEY(FROM_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_FROM_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_LOCATION_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_LOCATION_OID  FOREIGN KEY(FROM_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_FROM_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_NEST_CONTAINER_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_NEST_CONTAINER_OID  FOREIGN KEY(FROM_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_FROM_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_INVENTORYTRACE_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_INVENTORYTRACE_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_INVENTORYTRACE_OID  FOREIGN KEY(INVENTORYTRACE_OID)  REFERENCES OBJTREP_INVENTORYTRACE(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_INVENTORYTRACE_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_ITEM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_ITEM_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_LOT_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_LOT_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_LOT_OID  FOREIGN KEY(LOT_OID)  REFERENCES DCEREPORT_LOTS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_LOT_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_SERIAL_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_SERIAL_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_SERIAL_OID  FOREIGN KEY(SERIAL_OID)  REFERENCES OBJTREP_SERIALS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_SERIAL_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_TO_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_CONTAINER_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_CONTAINER_OID  FOREIGN KEY(TO_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_TO_LOCATION_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_LOCATION_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_LOCATION_OID  FOREIGN KEY(TO_LOCATION_OID)  REFERENCES DCEREPORT_LOCATIONS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_LOCATION_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_SERIALINVENTORYTRACE_TO_NEST_CONTAINER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_SERIALINVENTORYTRACE'))  ALTER TABLE OBJTREP_SERIALINVENTORYTRACE DROP CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_NEST_CONTAINER_OID
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_NEST_CONTAINER_OID  FOREIGN KEY(TO_NEST_CONTAINER_OID)  REFERENCES DCEREPORT_CONTAINERS(OID)
ALTER TABLE OBJTREP_SERIALINVENTORYTRACE NOCHECK CONSTRAINT FK_OBJTREP_SERIALINVENTORYTRACE_TO_NEST_CONTAINER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_PURCHASEORDERS_SUPPLIER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_PURCHASEORDERS'))  ALTER TABLE OBJTREP_PURCHASEORDERS DROP CONSTRAINT FK_OBJTREP_PURCHASEORDERS_SUPPLIER_OID
ALTER TABLE OBJTREP_PURCHASEORDERS WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_PURCHASEORDERS_SUPPLIER_OID  FOREIGN KEY(SUPPLIER_OID)  REFERENCES DCEREPORT_SUPPLIERS(OID)
ALTER TABLE OBJTREP_PURCHASEORDERS NOCHECK CONSTRAINT FK_OBJTREP_PURCHASEORDERS_SUPPLIER_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_PURCHASEORDERLINES_ITEM_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_PURCHASEORDERLINES'))  ALTER TABLE OBJTREP_PURCHASEORDERLINES DROP CONSTRAINT FK_OBJTREP_PURCHASEORDERLINES_ITEM_OID
ALTER TABLE OBJTREP_PURCHASEORDERLINES WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_PURCHASEORDERLINES_ITEM_OID  FOREIGN KEY(ITEM_OID)  REFERENCES DCEREPORT_ITEMS(OID)
ALTER TABLE OBJTREP_PURCHASEORDERLINES NOCHECK CONSTRAINT FK_OBJTREP_PURCHASEORDERLINES_ITEM_OID

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_OBJTREP_PURCHASEORDERLINES_PURCHASEORDER_OID') AND parent_object_id = OBJECT_ID(N'OBJTREP_PURCHASEORDERLINES'))  ALTER TABLE OBJTREP_PURCHASEORDERLINES DROP CONSTRAINT FK_OBJTREP_PURCHASEORDERLINES_PURCHASEORDER_OID
ALTER TABLE OBJTREP_PURCHASEORDERLINES WITH NOCHECK  ADD CONSTRAINT FK_OBJTREP_PURCHASEORDERLINES_PURCHASEORDER_OID  FOREIGN KEY(PURCHASEORDER_OID)  REFERENCES OBJTREP_PURCHASEORDERS(OID)
ALTER TABLE OBJTREP_PURCHASEORDERLINES NOCHECK CONSTRAINT FK_OBJTREP_PURCHASEORDERLINES_PURCHASEORDER_OID

